name: Build and Release

on:
  push:
  pull_request:
    branches:
      - main
jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 11]
        buildcmd:
          - ci/test-mill-release.sh
          - ci/test-mill-dev.sh
          - ci/test-mill-bootstrap-0.sh
          - ci/test-mill-bootstrap-1.sh
          - ./mill -i -k "{main,scalalib,scalajslib,scalanativelib,bsp}.__.test"
          - ./mill -i -k "contrib._.test"
          # - ./mill -i integration.test "mill.integration.local.JawnTests"
          - ./mill -i integration.test "mill.integration.local.{AcyclicTests,AmmoniteTests,DocAnnotationsTests}"
          - ./mill -i docs.antora.githubPages
        include:
          - java-version: 8
            # buildcmd: ./mill -i integration.test "mill.integration.local.{BetterFilesTests,UpickleTests}"
            buildcmd: ./mill -i integration.test "mill.integration.local.UpickleTests"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Run '${{ matrix.buildcmd }}'
        run: |
          git config --add user.name "Mill GithHub Actions"
          git config --add user.email "mill-ci@localhost"
          ${{ matrix.buildcmd }}

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 11]
        buildcmd:
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "{__.publishLocal,assembly,__.compile}"
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "{main,scalalib,scalajslib,bsp}.__.test"
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d integration.test "mill.integration.local.{AcyclicTests,AmmoniteTests,DocAnnotationsTests}"

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Run '${{ matrix.buildcmd }}'
        run: ${{ matrix.buildcmd }}

  test-windows-faulty:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 11]
        buildcmd:
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "contrib._.test"

    runs-on: windows-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Run '${{ matrix.buildcmd }}'
        run: ${{ matrix.buildcmd }}

  publish-sonatype:
    if: github.repository == 'com-lihaoyi/mill' && github.ref == 'refs/heads/main'
    needs: [test, test-windows]

    runs-on: ubuntu-latest

    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_DEPLOY_USER: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_DEPLOY_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 9

      - run: ci/release-maven.sh

  release-github:
    if: github.repository == 'com-lihaoyi/mill' && github.ref == 'refs/heads/main'
    needs: publish-sonatype
    runs-on: ubuntu-latest

    env:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 9

      - run: ./mill -i uploadToGithub $REPO_ACCESS_TOKEN

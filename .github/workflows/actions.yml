name: Build and Release

# We run full CI on push builds to main and on all pull requests
# Tags are automatically published
# Manual builds (workflow_dispatch) to the main branch are also published

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
  workflow_dispatch:

# cancel older runs of a pull request;
# this will not cancel anything for normal git pushes
concurrency:
  group: cancel-old-pr-runs-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 17]
        buildcmd:
          # bootstrap tests
          - ci/test-mill-bootstrap-0.sh
          # unit and module tests
          - ./mill -i -k "{main,scalalib,scalajslib,scalanativelib,testrunner,bsp}.__.test"

          # additional integration tests
          - ./mill -i -k "example.__.fork.test"
          - ./mill -i -k "example.__.server.test"

          - ./mill -i -k "integration.feature.__.fork.test"

          # integration tests of thirdparty repos
          - ./mill -i -k "integration.thirdparty.__.fork.test"
          # contrib tests
          - ./mill -i -k "contrib._.test"
          - ./mill -i docs.antora.githubPages
        include:
          # Just some reporting to enable reasoning about library upgrades
          - java-version: 8
            buildcmd: | 
              ./mill -i -k __.ivyDepsTree
              ./mill -i -k __.ivyDepsTree --withRuntime true

          # Limit some tests to Java 17 to limit CI times
          - java-version: 17
            buildcmd: ci/test-mill-bootstrap-1.sh
          - java-version: 17
            buildcmd: ci/test-mill-release.sh
          - java-version: 17
            buildcmd: ci/test-mill-dev.sh
          - java-version: 17
            buildcmd: ./mill -i -k "example.__.local.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.feature.__.local.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.feature.__.server.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.failure.__.local.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.failure.__.fork.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.failure.__.server.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.thirdparty.__.local.test"
          - java-version: 17
            buildcmd: ./mill -i -k "integration.thirdparty.__.server.test"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Prepare git config
        run: |
          git config --add user.name "Mill GithHub Actions"
          git config --add user.email "mill-ci@localhost"

      - name: Run '${{ matrix.buildcmd }}'
        run: ${{ matrix.buildcmd }}

  test-bin-compat:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8]
        buildcmd:
          - ./mill -i -k __.mimaReportBinaryIssues

    runs-on: ubuntu-latest
    # when doing milestone builds, this may be true
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Prepare git config
        run: |
          git config --add user.name "Mill GithHub Actions"
          git config --add user.email "mill-ci@localhost"

      - name: Run '${{ matrix.buildcmd }}'
        run: ${{ matrix.buildcmd }}

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 17]
        buildcmd:
          # Run a stripped down build matrix on Windows, to avoid taking too long
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "{__.publishLocal,assembly,__.compile}"
          - cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "{main,scalalib,scalajslib,bsp}.__.test"

        include:
          # Limit some tests to Java 17 to limit CI times
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "example.__.fork.test"
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "integration.feature.__.server.test"
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "integration.thirdparty.__.fork.test"
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "contrib.__.test"
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "integration.feature.__.fork.test"
          - java-version: 17
            buildcmd: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d -k "integration.failure.__.fork.test"

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Run '${{ matrix.buildcmd }}'
        run: ${{ matrix.buildcmd }}

  publish-sonatype:
    # when in master repo, publish all tags and manual runs on main
    if: github.repository == 'com-lihaoyi/mill' && (startsWith( github.ref, 'refs/tags/') || (github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' ) )
    needs: [test, test-windows, test-bin-compat]

    runs-on: ubuntu-latest

    # only run one publish job for the same sha at the same time
    # e.g. when a main-branch push is also tagged
    concurrency: publish-sonatype-${{ github.sha }}

    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin

      - run: ci/release-maven.sh

  release-github:
    # when in master repo, publish all tags and manual runs on main
    if: github.repository == 'com-lihaoyi/mill' && (startsWith( github.ref, 'refs/tags/') || (github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' ) )
    needs: publish-sonatype
    runs-on: ubuntu-latest

    env:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin

      - run: ./mill -i uploadToGithub $REPO_ACCESS_TOKEN

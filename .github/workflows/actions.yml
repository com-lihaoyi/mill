name: ci-push-validation

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        java-version: [8, 11]
        buildcmd:
          - ci/test-mill-release.sh
          - ci/test-mill-dev.sh
          - ci/test-mill-bootstrap-0.sh
          - ci/test-mill-bootstrap-1.sh
          - ./mill -i "{main,scalalib,scalajslib,scalanativelib,bsp}.__.test"
          - ./mill -i "contrib._.test"
          - ./mill -i integration.test "mill.integration.local.{JawnTests,BetterFilesTests,UpickleTests}"
          - ./mill -i integration.test "mill.integration.local.{AcyclicTests,AmmoniteTests,DocAnnotationsTests}"
          - ./mill -i docs.generate
        exclude:
          - java-version: 11
            buildcmd: ./mill -i integration.test "mill.integration.local.{JawnTests,BetterFilesTests,UpickleTests}"
          - java-version: 11
            buildcmd: ci/test-mill-release.sh

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare scala-native build
        run: sudo apt-get install libunwind8-dev libre2-dev

      - name: Run '${{ matrix.buildcmd }}'
        run: |
          git config --add user.name "Mill GithHub Actions"
          git config --add user.email "mill-ci@localhost"
          ${{ matrix.buildcmd }}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i "{__.publishLocal,assembly,__.compile}"

  test-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Test core
        run: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d "{main,scalalib,scalajslib,scalanativelib,bsp}.__.test"
      - name: Test contrib
        run: cmd /C %GITHUB_WORKSPACE%\ci\mill.bat -i -d "contrib._.test"

  publish-sonatype:
    if: github.repository == 'lihaoyi/mill' && github.ref == 'refs/heads/master'
    needs: [test, build-windows, test-windows]

    runs-on: ubuntu-latest

    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_DEPLOY_USER: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_DEPLOY_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 9

      - run: ci/on-master.py ci/release-maven.sh

  release-github-and-site:
    if: github.repository == 'lihaoyi/mill' && github.ref == 'refs/heads/master'
    needs: publish-sonatype

    strategy:
      matrix:
        buildcmd:
          - ci/on-master.py ci/release-github.sh
          - ci/on-master.py ci/publish-docs.sh

    runs-on: ubuntu-latest

    env:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      REPO_DEPLOY_KEY: ${{ secrets.REPO_DEPLOY_KEY }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 9

      - run: ${{ matrix.buildcmd }}

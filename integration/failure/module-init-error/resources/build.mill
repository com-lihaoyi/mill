package build
import mill._, scalalib._

def rootTask = Task { println("Running rootTask"); "rootTask" }
def rootCommand(s: String) = Task.Command { println(s"Running rootCommand $s") }

object foo extends Module {
  def fooTask = Task { println(s"Running fooTask"); 123 }
  def fooCommand(s: String) = Task.Command { println(s"Running fooCommand $s") }
  throw new Exception("Foo Boom")
}

object bar extends Module {
  def barTask = Task { println(s"Running barTask"); "abc" }
  def barCommand(s: String) = Task.Command { println(s"Running barCommand $s") }

  object qux extends Module {
    def quxTask = Task { println(s"Running quxTask"); "xyz" }
    def quxCommand(s: String) = Task.Command { println(s"Running quxCommand $s") }
    throw new Exception("Qux Boom")
  }
}

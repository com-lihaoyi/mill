package build
import scala.util.Properties
import mill._

def inheritInterleaved = Task {
  for (i <- Range.inclusive(1, 9)) {
    println("print stdout" + i)
    val echoCommandStdout =
      if (Properties.isWin) Seq("cmd.exe", "/C", s"echo proc stdout${i}")
      else Seq("echo", s"proc stdout${i}")
    os.proc(echoCommandStdout).call(stdout = os.Inherit)
    System.err.println("print stderr" + i)
    val echoCommandStderr =
      if (Properties.isWin) Seq("cmd.exe", "/C", s"echo proc stderr${i}>&2")
      else Seq("bash", "-c", s"echo proc stderr${i} >&2")
    os.proc(echoCommandStderr).call(stderr = os.Inherit)
  }
}

def inheritRaw = Task {
  println("print stdoutRaw")
  val echoCommandStdoutRaw =
    if (Properties.isWin) Seq("cmd.exe", "/C", "echo proc stdoutRaw")
    else Seq("echo", "proc stdoutRaw")
  os.proc(echoCommandStdoutRaw).call(stdout = os.InheritRaw)
  System.err.println("print stderrRaw")
  val echoCommandStderrRaw =
    if (Properties.isWin) Seq("cmd.exe", "/C", "echo proc stderrRaw>&2")
    else Seq("bash", "-c", "echo proc stderrRaw >&2")
  os.proc(echoCommandStderrRaw).call(stderr = os.InheritRaw)
}

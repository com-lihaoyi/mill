import mill._

object foo extends Module {
  def fooTask = Task.Source(millSourcePath / "foo.txt")

  def fooHelper(p: os.Path) = {
    "fooHelper " + os.read(p)
  }

  def fooCommand() = Task.Command {
    mill.main.client.DebugLog.println("DEBUG Computing fooCommand")
    System.out.println("Computing fooCommand")
    fooHelper(fooTask().path)
  }
}

object bar extends mill.define.TaskModule {
  // make sure it works with private tasks as well
  private def barTask = Task.Source(millSourcePath / "bar.txt")

  def barHelper(p: os.Path) = {
    "barHelper " + os.read(p)
  }

  def barCommand() = Task.Command {
    mill.main.client.DebugLog.println("DEBUG Computing barCommand")
    System.out.println("Computing barCommand")
    barHelper(barTask().path)
  }

  def defaultCommandName(): String = "barCommand"
}
package build.runner.launcher

import mill._
import mill.contrib.buildinfo.BuildInfo
import millbuild.*

object `package` extends MillPublishScalaModule with BuildInfo {
  // Disable scalafix because it seems to misbehave and cause
  // spurious errors when there are mixed Java/Scala sources
  def fix(args: String*): Command[Unit] = Task.Command {}

  def buildInfoPackageName = "mill.client"

  def moduleDeps = Seq(build.runner.client)

  def mvnDeps = Seq(
    Deps.nativeTerminal,
    Deps.coursier,
    Deps.coursierInterface,
    Deps.coursierJvm,
    Deps.logback,
    Deps.snakeyamlEngine,
    Deps.osLib
  )

  def buildInfoObjectName = "Versions"

  def buildInfoMembers = Task {
    val jlineNativeVersion = compileClasspath().map(_.path.last)
      .find(name => name.startsWith("jline-native-") && name.endsWith(".jar"))
      .map(_.stripPrefix("jline-native-").stripSuffix(".jar"))
      .getOrElse {
        sys.error("Cannot get jline-native version from compile class path")
      }
    Seq(
      BuildInfo.Value("coursierJvmIndexVersion", Deps.coursierJvmIndexVersion),
      BuildInfo.Value("jlineNativeVersion", jlineNativeVersion)
    )
  }
}

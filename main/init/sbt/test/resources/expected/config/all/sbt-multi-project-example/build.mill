package build

import _root_.build_.BaseModule
import mill._
import mill.javalib._
import mill.javalib.publish._
import mill.scalalib.SbtModule

object Deps {

  val `ch.qos.logback:logback-classic` =
    ivy"ch.qos.logback:logback-classic:1.2.3"

  val `com.github.julien-truffaut:monocle-core` =
    ivy"com.github.julien-truffaut::monocle-core:1.4.0"

  val `com.github.julien-truffaut:monocle-macro` =
    ivy"com.github.julien-truffaut::monocle-macro:1.4.0"

  val `com.github.pureconfig:pureconfig` =
    ivy"com.github.pureconfig::pureconfig:0.8.0"

  val `com.typesafe.akka:akka-stream` =
    ivy"com.typesafe.akka::akka-stream:2.5.6"

  val `com.typesafe.scala-logging:scala-logging` =
    ivy"com.typesafe.scala-logging::scala-logging:3.7.2"
  val `com.typesafe:config` = ivy"com.typesafe:config:1.3.1"

  val `io.netty:netty-transport-native-epoll` =
    ivy"io.netty:netty-transport-native-epoll:4.1.118.Final;type=pom;classifier=linux-x86_64;exclude=io.netty:netty-transport-native-epoll"

  val `net.logstash.logback:logstash-logback-encoder` =
    ivy"net.logstash.logback:logstash-logback-encoder:4.11"
  val `org.scalacheck:scalacheck` = ivy"org.scalacheck::scalacheck:1.13.5"
  val `org.scalatest:scalatest` = ivy"org.scalatest::scalatest:3.0.4"
  val `org.slf4j:jcl-over-slf4j` = ivy"org.slf4j:jcl-over-slf4j:1.7.25"
}

object `package` extends RootModule with BaseModule {

  def artifactName = "sbt-multi-project-example"

  def pomSettings = PomSettings(
    "This is an sbt sample project for testing Mill's init command.",
    "com.pbassiner",
    "https://github.com/com-lihaoyi/mill",
    Seq(License(
      "Apache-2.0",
      "Apache-2.0",
      "https://www.apache.org/licenses/LICENSE-2.0.txt",
      false,
      false,
      "repo"
    )),
    VersionControl(
      Some("https://github.com/com-lihaoyi/mill"),
      Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
      None,
      None
    ),
    Seq(Developer("johnd", "John Doe", "https://example.com/johnd", None, None))
  )

  object common extends BaseModule {

    def ivyDeps = super.ivyDeps() ++ Seq(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    object tests extends SbtTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Seq(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

      def testSandboxWorkingDir = false
      def testParallelism = false
    }
  }

  object multi1 extends BaseModule {

    def scalacOptions = super.scalacOptions() ++ Seq("-V")

    def ivyDeps = super.ivyDeps() ++ Seq(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.github.julien-truffaut:monocle-core`,
      Deps.`com.github.julien-truffaut:monocle-macro`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def pomSettings = PomSettings(
      "This is an sbt sample project for testing Mill's init command.",
      "com.pbassiner",
      "https://github.com/com-lihaoyi/mill",
      Seq(License(
        "Apache-2.0",
        "Apache-2.0",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        "repo"
      )),
      VersionControl(
        Some("https://github.com/com-lihaoyi/mill"),
        Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
        None,
        None
      ),
      Seq(
        Developer("johnd", "John Doe", "https://example.com/johnd", None, None)
      )
    )

    object tests extends SbtTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Seq(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

      def testSandboxWorkingDir = false
      def testParallelism = false
    }
  }

  object multi2 extends BaseModule {

    def scalacOptions = Seq(
      "-unchecked",
      "-feature",
      "-language:existentials",
      "-language:higherKinds",
      "-language:implicitConversions",
      "-language:postfixOps",
      "-deprecation"
    )

    def ivyDeps = super.ivyDeps() ++ Seq(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.github.pureconfig:pureconfig`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def pomSettings = PomSettings(
      "This is an sbt sample project for testing Mill's init command.",
      "com.pbassiner",
      "https://github.com/com-lihaoyi/mill",
      Seq(License(
        "Apache-2.0",
        "Apache-2.0",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        "repo"
      )),
      VersionControl(
        Some("https://github.com/com-lihaoyi/mill"),
        Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
        None,
        None
      ),
      Seq(
        Developer("johnd", "John Doe", "https://example.com/johnd", None, None)
      )
    )

    object tests extends SbtTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Seq(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

      def testSandboxWorkingDir = false
      def testParallelism = false
    }
  }

  object nested extends Module {

    object nested extends BaseModule {

      def ivyDeps = super.ivyDeps() ++
        Seq(Deps.`io.netty:netty-transport-native-epoll`)

      def pomSettings = PomSettings(
        "This is an sbt sample project for testing Mill's init command.",
        "com.pbassiner",
        "https://github.com/com-lihaoyi/mill",
        Seq(License(
          "Apache-2.0",
          "Apache-2.0",
          "https://www.apache.org/licenses/LICENSE-2.0.txt",
          false,
          false,
          "repo"
        )),
        VersionControl(
          Some("https://github.com/com-lihaoyi/mill"),
          Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
          None,
          None
        ),
        Seq(Developer(
          "johnd",
          "John Doe",
          "https://example.com/johnd",
          None,
          None
        ))
      )

    }
  }
}

trait BaseModule extends SbtModule with PublishModule {

  def scalaVersion = "2.12.3"

  def scalacOptions = super.scalacOptions() ++ Seq(
    "-unchecked",
    "-feature",
    "-language:existentials",
    "-language:higherKinds",
    "-language:implicitConversions",
    "-language:postfixOps",
    "-deprecation",
    "-encoding",
    "utf8"
  )

  def pomSettings = PomSettings(
    "This is the common module.",
    "com.pbassiner",
    "https://github.com/com-lihaoyi/mill",
    Seq(License(
      "Apache-2.0",
      "Apache-2.0",
      "https://www.apache.org/licenses/LICENSE-2.0.txt",
      false,
      false,
      "repo"
    )),
    VersionControl(
      Some("https://github.com/com-lihaoyi/mill"),
      Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
      None,
      None
    ),
    Seq(Developer("johnd", "John Doe", "https://example.com/johnd", None, None))
  )

  def publishVersion = "0.1.0-SNAPSHOT"

  def repositoriesTask = Task.Anon {
    super.repositoriesTask() ++ Seq(
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/service/local/repositories/releases/content/"
      ),
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/content/repositories/snapshots"
      )
    )
  }

  def jvmWorker = mill.define.ModuleRef(BaseModuleJvmWorker)

  object BaseModuleJvmWorker extends JvmWorkerModule {
    def jvmId = "11"
  }
}

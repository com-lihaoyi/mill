package build.multi1

import mill._
import mill.javalib._
import mill.javalib.publish._
import mill.scalalib.SbtModule

object `package` extends RootModule with SbtModule with PublishModule {

  def scalaVersion = "2.12.3"

  def scalacOptions = super.scalacOptions() ++ Seq(
    "-unchecked",
    "-feature",
    "-language:existentials",
    "-language:higherKinds",
    "-language:implicitConversions",
    "-language:postfixOps",
    "-deprecation",
    "-encoding",
    "utf8",
    "-V"
  )

  def repositoriesTask = Task.Anon {
    super.repositoriesTask() ++ Seq(
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/service/local/repositories/releases/content/"
      ),
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/content/repositories/snapshots"
      )
    )
  }

  def mvnDeps = super.mvnDeps() ++ Seq(
    mvn"ch.qos.logback:logback-classic:1.2.3",
    mvn"com.github.julien-truffaut::monocle-core:1.4.0",
    mvn"com.github.julien-truffaut::monocle-macro:1.4.0",
    mvn"com.typesafe.akka::akka-stream:2.5.6",
    mvn"com.typesafe.scala-logging::scala-logging:3.7.2",
    mvn"com.typesafe:config:1.3.1",
    mvn"net.logstash.logback:logstash-logback-encoder:4.11",
    mvn"org.slf4j:jcl-over-slf4j:1.7.25"
  )

  def moduleDeps = super.moduleDeps ++ Seq(build.common)

  def pomSettings = PomSettings(
    "This is an sbt sample project for testing Mill's init command.",
    "com.pbassiner",
    "https://github.com/com-lihaoyi/mill",
    Seq(License(
      "Apache-2.0",
      "Apache-2.0",
      "https://www.apache.org/licenses/LICENSE-2.0.txt",
      false,
      false,
      "repo"
    )),
    VersionControl(
      Some("https://github.com/com-lihaoyi/mill"),
      Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
      None,
      None
    ),
    Seq(Developer("johnd", "John Doe", "https://example.com/johnd", None, None))
  )

  def publishVersion = "0.1.0-SNAPSHOT"

  object test extends SbtTests with TestModule.ScalaTest {

    def mvnDeps = super.mvnDeps() ++ Seq(
      mvn"org.scalacheck::scalacheck:1.13.5",
      mvn"org.scalatest::scalatest:3.0.4"
    )

    def testSandboxWorkingDir = false
    def testParallelism = false
  }
}

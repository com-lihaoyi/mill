diff --git a/bsp/package.mill b/bsp/package.mill
index 1c42566e1ad..0e9b955fbe8 100644
--- a/bsp/package.mill
+++ b/bsp/package.mill
@@ -39,7 +39,7 @@ object `package` extends RootModule with build.MillPublishScalaModule with Build
       build.runner.server.client,
       build.core.api
     ) ++ build.scalalib.compileModuleDeps
-    def ivyDeps = Agg(
+    def mvnDeps = Agg(
       build.Deps.bsp4j,
       build.Deps.sbtTestInterface,
       build.Deps.osLib
diff --git a/build.mill b/build.mill
index 76a4904ce88..dd8c7bf0211 100644
--- a/build.mill
+++ b/build.mill
@@ -69,37 +69,37 @@ object Deps {
   object Scalajs_1 {
     val scalaJsVersion = "1.18.1"
     val scalajsEnvJsdomNodejs =
-      ivy"org.scala-js::scalajs-env-jsdom-nodejs:1.1.0".withDottyCompat(scalaVersion)
+      mvn"org.scala-js::scalajs-env-jsdom-nodejs:1.1.0".withDottyCompat(scalaVersion)
     val scalajsEnvExoegoJsdomNodejs =
-      ivy"net.exoego::scalajs-env-jsdom-nodejs:2.1.0".withDottyCompat(scalaVersion)
-    val scalajsEnvNodejs = ivy"org.scala-js::scalajs-env-nodejs:1.4.0".withDottyCompat(scalaVersion)
+      mvn"net.exoego::scalajs-env-jsdom-nodejs:2.1.0".withDottyCompat(scalaVersion)
+    val scalajsEnvNodejs = mvn"org.scala-js::scalajs-env-nodejs:1.4.0".withDottyCompat(scalaVersion)
     val scalajsEnvPhantomjs =
-      ivy"org.scala-js::scalajs-env-phantomjs:1.0.0".withDottyCompat(scalaVersion)
+      mvn"org.scala-js::scalajs-env-phantomjs:1.0.0".withDottyCompat(scalaVersion)
     val scalajsEnvSelenium =
-      ivy"org.scala-js::scalajs-env-selenium:1.1.1".withDottyCompat(scalaVersion)
+      mvn"org.scala-js::scalajs-env-selenium:1.1.1".withDottyCompat(scalaVersion)
     val scalajsSbtTestAdapter =
-      ivy"org.scala-js::scalajs-sbt-test-adapter:${scalaJsVersion}".withDottyCompat(scalaVersion)
+      mvn"org.scala-js::scalajs-sbt-test-adapter:${scalaJsVersion}".withDottyCompat(scalaVersion)
     val scalajsLinker =
-      ivy"org.scala-js::scalajs-linker:${scalaJsVersion}".withDottyCompat(scalaVersion)
+      mvn"org.scala-js::scalajs-linker:${scalaJsVersion}".withDottyCompat(scalaVersion)
     val scalajsImportMap =
-      ivy"com.armanbilge::scalajs-importmap:0.1.1".withDottyCompat(scalaVersion)
+      mvn"com.armanbilge::scalajs-importmap:0.1.1".withDottyCompat(scalaVersion)
   }
 
   object Scalanative_0_5 {
     val scalanativeVersion = "0.5.6"
-    val scalanativeTools = ivy"org.scala-native::tools:${scalanativeVersion}"
-    val scalanativeUtil = ivy"org.scala-native::util:${scalanativeVersion}"
-    val scalanativeNir = ivy"org.scala-native::nir:${scalanativeVersion}"
-    val scalanativeTestRunner = ivy"org.scala-native::test-runner:${scalanativeVersion}"
+    val scalanativeTools = mvn"org.scala-native::tools:${scalanativeVersion}"
+    val scalanativeUtil = mvn"org.scala-native::util:${scalanativeVersion}"
+    val scalanativeNir = mvn"org.scala-native::nir:${scalanativeVersion}"
+    val scalanativeTestRunner = mvn"org.scala-native::test-runner:${scalanativeVersion}"
   }
 
   trait Play {
     def playVersion: String
     def playBinVersion: String = playVersion.split("[.]").take(2).mkString(".")
     def routesCompiler = playBinVersion match {
-      case "2.6" | "2.7" | "2.8" => ivy"com.typesafe.play::routes-compiler::$playVersion"
-      case "2.9" => ivy"com.typesafe.play::play-routes-compiler::$playVersion"
-      case _ => ivy"org.playframework::play-routes-compiler::$playVersion"
+      case "2.6" | "2.7" | "2.8" => mvn"com.typesafe.play::routes-compiler::$playVersion"
+      case "2.9" => mvn"com.typesafe.play::play-routes-compiler::$playVersion"
+      case _ => mvn"org.playframework::play-routes-compiler::$playVersion"
     }
     def scalaVersion: String = Deps.scalaVersion
   }
@@ -124,132 +124,132 @@ object Deps {
   val play =
     Seq(Play_3_0, Play_2_9, Play_2_8, Play_2_7, Play_2_6).map(p => (p.playBinVersion, p)).toMap
 
-  val acyclic = ivy"com.lihaoyi:::acyclic:0.3.18"
+  val acyclic = mvn"com.lihaoyi:::acyclic:0.3.18"
   val ammoniteVersion = "3.0.2"
-  val asmTree = ivy"org.ow2.asm:asm-tree:9.7.1"
-  val bloopConfig = ivy"ch.epfl.scala::bloop-config:1.5.5".withDottyCompat(scalaVersion)
+  val asmTree = mvn"org.ow2.asm:asm-tree:9.7.1"
+  val bloopConfig = mvn"ch.epfl.scala::bloop-config:1.5.5".withDottyCompat(scalaVersion)
 
-  val classgraph = ivy"io.github.classgraph:classgraph:4.8.179"
+  val classgraph = mvn"io.github.classgraph:classgraph:4.8.179"
   val coursierVersion = "2.1.25-M4"
-  val coursier = ivy"io.get-coursier::coursier:$coursierVersion".withDottyCompat(scalaVersion)
-  val coursierInterface = ivy"io.get-coursier:interface:1.0.29-M1"
+  val coursier = mvn"io.get-coursier::coursier:$coursierVersion".withDottyCompat(scalaVersion)
+  val coursierInterface = mvn"io.get-coursier:interface:1.0.29-M1"
   val coursierJvm =
-    ivy"io.get-coursier::coursier-jvm:$coursierVersion".withDottyCompat(scalaVersion)
+    mvn"io.get-coursier::coursier-jvm:$coursierVersion".withDottyCompat(scalaVersion)
 
-  val cask = ivy"com.lihaoyi::cask:0.9.4"
-  val castor = ivy"com.lihaoyi::castor:0.3.0"
-  val fastparse = ivy"com.lihaoyi::fastparse:3.1.1"
-  val flywayCore = ivy"org.flywaydb:flyway-core:8.5.13"
+  val cask = mvn"com.lihaoyi::cask:0.9.4"
+  val castor = mvn"com.lihaoyi::castor:0.3.0"
+  val fastparse = mvn"com.lihaoyi::fastparse:3.1.1"
+  val flywayCore = mvn"org.flywaydb:flyway-core:8.5.13"
   val graphvizJava = Seq(
-    ivy"guru.nidi:graphviz-java-min-deps:0.18.1",
-    ivy"org.webjars.npm:viz.js-graphviz-java:2.1.3",
-    ivy"org.apache.xmlgraphics:batik-rasterizer:1.18"
+    mvn"guru.nidi:graphviz-java-min-deps:0.18.1",
+    mvn"org.webjars.npm:viz.js-graphviz-java:2.1.3",
+    mvn"org.apache.xmlgraphics:batik-rasterizer:1.18"
   )
 
-  val jgraphtCore = ivy"org.jgrapht:jgrapht-core:1.4.0" // 1.5.0+ dont support JDK8
+  val jgraphtCore = mvn"org.jgrapht:jgrapht-core:1.4.0" // 1.5.0+ dont support JDK8
   val javet = Seq(
-    ivy"com.caoccao.javet:javet:4.0.0",
-    ivy"com.caoccao.javet:javet-linux-arm64:4.0.0",
-    ivy"com.caoccao.javet:javet-macos:4.0.0"
+    mvn"com.caoccao.javet:javet:4.0.0",
+    mvn"com.caoccao.javet:javet-linux-arm64:4.0.0",
+    mvn"com.caoccao.javet:javet-macos:4.0.0"
   )
 
-  val jline = ivy"org.jline:jline:3.28.0"
+  val jline = mvn"org.jline:jline:3.28.0"
   val jnaVersion = "5.16.0"
 
-  val jna = ivy"net.java.dev.jna:jna:${jnaVersion}"
-  val jnaPlatform = ivy"net.java.dev.jna:jna-platform:${jnaVersion}"
+  val jna = mvn"net.java.dev.jna:jna:${jnaVersion}"
+  val jnaPlatform = mvn"net.java.dev.jna:jna-platform:${jnaVersion}"
 
-  val junitInterface = ivy"com.github.sbt:junit-interface:0.13.3"
-  val commonsIo = ivy"commons-io:commons-io:2.18.0"
-  val log4j2Core = ivy"org.apache.logging.log4j:log4j-core:2.24.3"
-  val osLib = ivy"com.lihaoyi::os-lib:0.11.5-M2"
-  val pprint = ivy"com.lihaoyi::pprint:0.9.0"
-  val mainargs = ivy"com.lihaoyi::mainargs:0.7.6"
+  val junitInterface = mvn"com.github.sbt:junit-interface:0.13.3"
+  val commonsIo = mvn"commons-io:commons-io:2.18.0"
+  val log4j2Core = mvn"org.apache.logging.log4j:log4j-core:2.24.3"
+  val osLib = mvn"com.lihaoyi::os-lib:0.11.5-M2"
+  val pprint = mvn"com.lihaoyi::pprint:0.9.0"
+  val mainargs = mvn"com.lihaoyi::mainargs:0.7.6"
   val millModuledefsVersion = "0.11.3-M5"
   val millModuledefsString = s"com.lihaoyi::mill-moduledefs:${millModuledefsVersion}"
-  val millModuledefs = ivy"${millModuledefsString}"
+  val millModuledefs = mvn"${millModuledefsString}"
   val millModuledefsPlugin =
-    ivy"com.lihaoyi:::scalac-mill-moduledefs-plugin:${millModuledefsVersion}"
+    mvn"com.lihaoyi:::scalac-mill-moduledefs-plugin:${millModuledefsVersion}"
   // can't use newer versions, as these need higher Java versions
-  val testng = ivy"org.testng:testng:7.5.1"
-  val sbtTestInterface = ivy"org.scala-sbt:test-interface:1.0"
+  val testng = mvn"org.testng:testng:7.5.1"
+  val sbtTestInterface = mvn"org.scala-sbt:test-interface:1.0"
   def scalaCompiler(scalaVersion: String) = {
-    if (JvmWorkerUtil.isScala3(scalaVersion)) ivy"org.scala-lang:scala3-compiler_3:${scalaVersion}"
-    else ivy"org.scala-lang:scala-compiler:${scalaVersion}"
+    if (JvmWorkerUtil.isScala3(scalaVersion)) mvn"org.scala-lang:scala3-compiler_3:${scalaVersion}"
+    else mvn"org.scala-lang:scala-compiler:${scalaVersion}"
   }
-  val scalafmtDynamic = ivy"org.scalameta::scalafmt-dynamic:3.8.5".withDottyCompat(scalaVersion)
+  val scalafmtDynamic = mvn"org.scalameta::scalafmt-dynamic:3.8.5".withDottyCompat(scalaVersion)
   def scalaReflect(scalaVersion: String) =
     if (JvmWorkerUtil.isScala3(scalaVersion))
-      ivy"org.scala-lang:scala-reflect:${Deps.scala2Version}"
-    else ivy"org.scala-lang:scala-reflect:${scalaVersion}"
+      mvn"org.scala-lang:scala-reflect:${Deps.scala2Version}"
+    else mvn"org.scala-lang:scala-reflect:${scalaVersion}"
   val scoverage2Version = "2.2.1"
-  val scalacScoverage2Plugin = ivy"org.scoverage:::scalac-scoverage-plugin:${scoverage2Version}"
-  val scalacScoverage2Reporter = ivy"org.scoverage::scalac-scoverage-reporter:${scoverage2Version}"
-  val scalacScoverage2Domain = ivy"org.scoverage::scalac-scoverage-domain:${scoverage2Version}"
+  val scalacScoverage2Plugin = mvn"org.scoverage:::scalac-scoverage-plugin:${scoverage2Version}"
+  val scalacScoverage2Reporter = mvn"org.scoverage::scalac-scoverage-reporter:${scoverage2Version}"
+  val scalacScoverage2Domain = mvn"org.scoverage::scalac-scoverage-domain:${scoverage2Version}"
   val scalacScoverage2Serializer =
-    ivy"org.scoverage::scalac-scoverage-serializer:${scoverage2Version}"
-  val scalaparse = ivy"com.lihaoyi::scalaparse:${fastparse.version}"
-  val scalatags = ivy"com.lihaoyi::scalatags:0.13.1".withDottyCompat(scalaVersion)
-  def scalaXml = ivy"org.scala-lang.modules::scala-xml:2.3.0"
+    mvn"org.scoverage::scalac-scoverage-serializer:${scoverage2Version}"
+  val scalaparse = mvn"com.lihaoyi::scalaparse:${fastparse.version}"
+  val scalatags = mvn"com.lihaoyi::scalatags:0.13.1".withDottyCompat(scalaVersion)
+  def scalaXml = mvn"org.scala-lang.modules::scala-xml:2.3.0"
   // keep in sync with doc/antora/antory.yml
-  val semanticDBscala = ivy"org.scalameta:::semanticdb-scalac:4.12.4"
-  val semanticDbJava = ivy"com.sourcegraph:semanticdb-java:0.10.3"
-  val sourcecode = ivy"com.lihaoyi::sourcecode:0.4.3-M5"
-  val upickle = ivy"com.lihaoyi::upickle:4.1.0"
+  val semanticDBscala = mvn"org.scalameta:::semanticdb-scalac:4.12.4"
+  val semanticDbJava = mvn"com.sourcegraph:semanticdb-java:0.10.3"
+  val sourcecode = mvn"com.lihaoyi::sourcecode:0.4.3-M5"
+  val upickle = mvn"com.lihaoyi::upickle:4.1.0"
   // Using "native-terminal-no-ffm" rather than just "native-terminal", as the GraalVM releases currently
   // lacks support for FFM on Mac ARM. That should be fixed soon, see oracle/graal#8113.
-  val nativeTerminal = ivy"io.github.alexarchambault.native-terminal:native-terminal-no-ffm:0.0.9.1"
-  val zinc = ivy"org.scala-sbt::zinc:1.10.8".withDottyCompat(scalaVersion)
+  val nativeTerminal = mvn"io.github.alexarchambault.native-terminal:native-terminal-no-ffm:0.0.9.1"
+  val zinc = mvn"org.scala-sbt::zinc:1.10.8".withDottyCompat(scalaVersion)
   // keep in sync with doc/antora/antory.yml
-  val bsp4j = ivy"ch.epfl.scala:bsp4j:2.2.0-M2"
-  val fansi = ivy"com.lihaoyi::fansi:0.5.0"
+  val bsp4j = mvn"ch.epfl.scala:bsp4j:2.2.0-M2"
+  val fansi = mvn"com.lihaoyi::fansi:0.5.0"
   val jarjarabrams =
-    ivy"com.eed3si9n.jarjarabrams::jarjar-abrams-core:1.14.1".withDottyCompat(scalaVersion)
-  val requests = ivy"com.lihaoyi::requests:0.9.0"
-  val logback = ivy"ch.qos.logback:logback-classic:1.5.17"
-  val sonatypeCentralClient = ivy"com.lumidion::sonatype-central-client-requests:0.3.0"
+    mvn"com.eed3si9n.jarjarabrams::jarjar-abrams-core:1.14.1".withDottyCompat(scalaVersion)
+  val requests = mvn"com.lihaoyi::requests:0.9.0"
+  val logback = mvn"ch.qos.logback:logback-classic:1.5.17"
+  val sonatypeCentralClient = mvn"com.lumidion::sonatype-central-client-requests:0.3.0"
   val kotlinVersion = "2.0.21"
-  val kotlinCompiler = ivy"org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion"
+  val kotlinCompiler = mvn"org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion"
   val mavenVersion = "3.9.9"
-  val mavenEmbedder = ivy"org.apache.maven:maven-embedder:$mavenVersion"
+  val mavenEmbedder = mvn"org.apache.maven:maven-embedder:$mavenVersion"
   val mavenResolverVersion = "1.9.22"
   val mavenResolverConnectorBasic =
-    ivy"org.apache.maven.resolver:maven-resolver-connector-basic:$mavenResolverVersion"
+    mvn"org.apache.maven.resolver:maven-resolver-connector-basic:$mavenResolverVersion"
   val mavenResolverSupplier =
-    ivy"org.apache.maven.resolver:maven-resolver-supplier:$mavenResolverVersion"
+    mvn"org.apache.maven.resolver:maven-resolver-supplier:$mavenResolverVersion"
   val mavenResolverTransportFile =
-    ivy"org.apache.maven.resolver:maven-resolver-transport-file:$mavenResolverVersion"
+    mvn"org.apache.maven.resolver:maven-resolver-transport-file:$mavenResolverVersion"
   val mavenResolverTransportHttp =
-    ivy"org.apache.maven.resolver:maven-resolver-transport-http:$mavenResolverVersion"
+    mvn"org.apache.maven.resolver:maven-resolver-transport-http:$mavenResolverVersion"
   val mavenResolverTransportWagon =
-    ivy"org.apache.maven.resolver:maven-resolver-transport-wagon:$mavenResolverVersion"
+    mvn"org.apache.maven.resolver:maven-resolver-transport-wagon:$mavenResolverVersion"
   val coursierJvmIndexVersion = "0.0.4-84-f852c6"
-  val gradleApi = ivy"dev.gradleplugins:gradle-api:8.11.1"
-  val sbt = ivy"org.scala-sbt:sbt:1.10.10"
+  val gradleApi = mvn"dev.gradleplugins:gradle-api:8.11.1"
+  val sbt = mvn"org.scala-sbt:sbt:1.10.10"
 
   object RuntimeDeps {
     val dokkaVersion = "2.0.0"
     val koverVersion = "0.8.3"
 
-    val detektCli = ivy"io.gitlab.arturbosch.detekt:detekt-cli:1.23.7"
+    val detektCli = mvn"io.gitlab.arturbosch.detekt:detekt-cli:1.23.7"
     val dokkaAnalysisDescriptors =
-      ivy"org.jetbrains.dokka:analysis-kotlin-descriptors:$dokkaVersion"
-    val dokkaBase = ivy"org.jetbrains.dokka:dokka-base:$dokkaVersion"
-    val dokkaCli = ivy"org.jetbrains.dokka:dokka-cli:$dokkaVersion"
-    val errorProneCore = ivy"com.google.errorprone:error_prone_core:2.31.0"
-    val freemarker = ivy"org.freemarker:freemarker:2.3.34"
-    val jupiterInterface = ivy"com.github.sbt.junit:jupiter-interface:0.13.3"
+      mvn"org.jetbrains.dokka:analysis-kotlin-descriptors:$dokkaVersion"
+    val dokkaBase = mvn"org.jetbrains.dokka:dokka-base:$dokkaVersion"
+    val dokkaCli = mvn"org.jetbrains.dokka:dokka-cli:$dokkaVersion"
+    val errorProneCore = mvn"com.google.errorprone:error_prone_core:2.31.0"
+    val freemarker = mvn"org.freemarker:freemarker:2.3.34"
+    val jupiterInterface = mvn"com.github.sbt.junit:jupiter-interface:0.13.3"
     val kotestJvm =
-      ivy"io.kotest:kotest-framework-multiplatform-plugin-embeddable-compiler-jvm:5.9.1"
-    val kotlinxHtmlJvm = ivy"org.jetbrains.kotlinx:kotlinx-html-jvm:0.11.0"
-    val koverCli = ivy"org.jetbrains.kotlinx:kover-cli:$koverVersion"
-    val koverJvmAgent = ivy"org.jetbrains.kotlinx:kover-jvm-agent:$koverVersion"
-    val ktfmt = ivy"com.facebook:ktfmt:0.53"
-    val ktlint = ivy"com.pinterest.ktlint:ktlint-core:0.49.1"
-    val palantirFormat = ivy"com.palantir.javaformat:palantir-java-format:2.51.0"
-    val proguard = ivy"com.guardsquare:proguard-base:7.7.0"
-    val revApi = ivy"org.revapi:revapi-standalone:0.12.0"
-    val sbtTestInterface = ivy"com.github.sbt:junit-interface:0.13.2"
+      mvn"io.kotest:kotest-framework-multiplatform-plugin-embeddable-compiler-jvm:5.9.1"
+    val kotlinxHtmlJvm = mvn"org.jetbrains.kotlinx:kotlinx-html-jvm:0.11.0"
+    val koverCli = mvn"org.jetbrains.kotlinx:kover-cli:$koverVersion"
+    val koverJvmAgent = mvn"org.jetbrains.kotlinx:kover-jvm-agent:$koverVersion"
+    val ktfmt = mvn"com.facebook:ktfmt:0.53"
+    val ktlint = mvn"com.pinterest.ktlint:ktlint-core:0.49.1"
+    val palantirFormat = mvn"com.palantir.javaformat:palantir-java-format:2.51.0"
+    val proguard = mvn"com.guardsquare:proguard-base:7.7.0"
+    val revApi = mvn"org.revapi:revapi-standalone:0.12.0"
+    val sbtTestInterface = mvn"com.github.sbt:junit-interface:0.13.2"
 
     def all = Seq(
       detektCli,
@@ -274,27 +274,27 @@ object Deps {
 
   /** Used to manage transitive versions. */
   lazy val transitiveDeps = Seq(
-    ivy"org.apache.ant:ant:1.10.15",
+    mvn"org.apache.ant:ant:1.10.15",
     Deps.commonsIo,
-    ivy"com.google.code.gson:gson:2.11.0",
-    ivy"com.google.protobuf:protobuf-java:4.29.3",
-    ivy"com.google.guava:guava:33.4.0-jre",
-    ivy"org.yaml:snakeyaml:2.3",
-    ivy"org.apache.commons:commons-compress:1.27.1"
+    mvn"com.google.code.gson:gson:2.11.0",
+    mvn"com.google.protobuf:protobuf-java:4.29.3",
+    mvn"com.google.guava:guava:33.4.0-jre",
+    mvn"org.yaml:snakeyaml:2.3",
+    mvn"org.apache.commons:commons-compress:1.27.1"
   )
 
   /** Used in tests. */
   object TestDeps {
     // tests framework (test)
-    val scalaCheck = ivy"org.scalacheck::scalacheck:1.18.1"
-    val scalaTest = ivy"org.scalatest::scalatest:3.2.19"
-    val utest = ivy"com.lihaoyi::utest:0.8.5"
-    val zioTest = ivy"dev.zio::zio-test:2.1.14"
+    val scalaCheck = mvn"org.scalacheck::scalacheck:1.18.1"
+    val scalaTest = mvn"org.scalatest::scalatest:3.2.19"
+    val utest = mvn"com.lihaoyi::utest:0.8.5"
+    val zioTest = mvn"dev.zio::zio-test:2.1.14"
   }
 
   /** Used in documentation. */
   object DocDeps {
-    val millScip = ivy"io.chris-kipp::mill-scip_mill0.11:0.3.7"
+    val millScip = mvn"io.chris-kipp::mill-scip_mill0.11:0.3.7"
   }
 }
 
@@ -425,7 +425,7 @@ trait MillJavaModule extends JavaModule {
     upstream.toMap ++ current
   }
 
-  def testIvyDeps: T[Agg[Dep]] = Agg(Deps.TestDeps.utest)
+  def testmvnDeps: T[Agg[Dep]] = Agg(Deps.TestDeps.utest)
   def testForkEnv: T[Map[String, String]] = forkEnv()
   def testModuleDeps: Seq[JavaModule] =
     if (this == build.main) Seq(build.main, build.core.util)
@@ -552,20 +552,20 @@ trait MillScalaModule extends ScalaModule with MillJavaModule /* with ScalafixMo
       )
     )
 
-  def scalacPluginIvyDeps = T {
+  def scalacPluginmvnDeps = T {
     val sv = scalaVersion()
     val binaryVersion = JvmWorkerUtil.scalaBinaryVersion(sv)
     val hasModuleDefs = binaryVersion == "2.13" || binaryVersion == "3"
-    super.scalacPluginIvyDeps() ++
+    super.scalacPluginmvnDeps() ++
       Option.when(binaryVersion != "3")(Deps.acyclic) ++
       Option.when(hasModuleDefs)(Deps.millModuledefsPlugin)
   }
 
-  def mandatoryIvyDeps = T {
+  def mandatorymvnDeps = T {
     val sv = scalaVersion()
     val binaryVersion = JvmWorkerUtil.scalaBinaryVersion(sv)
     val hasModuleDefs = binaryVersion == "2.13" || binaryVersion == "3"
-    super.mandatoryIvyDeps() ++
+    super.mandatorymvnDeps() ++
       Option.when(hasModuleDefs)(Deps.millModuledefs)
   }
 
@@ -576,7 +576,7 @@ trait MillScalaModule extends ScalaModule with MillJavaModule /* with ScalafixMo
     def scalafixConfig = T { Some(T.workspace / ".scalafix.conf") }
     def forkArgs = super.forkArgs() ++ outer.testArgs()
     def moduleDeps = outer.testModuleDeps
-    def ivyDeps = super.ivyDeps() ++ outer.testIvyDeps()
+    def mvnDeps = super.mvnDeps() ++ outer.testmvnDeps()
     def forkEnv = super.forkEnv() ++ outer.testForkEnv()
   }
 }
@@ -639,7 +639,7 @@ trait MillStableScalaModule extends MillPublishScalaModule /*with Mima*/ {
             }
           }
           val patchedId = artifactName() + patchedSuffix
-          ivy"${pomSettings().organization}:${patchedId}:${version}"
+          mvn"${pomSettings().organization}:${patchedId}:${version}"
         })
     )
   }
@@ -661,13 +661,13 @@ trait BridgeModule extends MillPublishCrossScalaModule {
   def artifactName = "mill-scala-compiler-bridge"
   def pomSettings = commonPomSettings(artifactName())
   def crossFullScalaVersion = true
-  def ivyDeps = Agg(
-    ivy"org.scala-sbt:compiler-interface:${Deps.zinc.version}",
-    ivy"org.scala-sbt:util-interface:${Deps.zinc.version}"
+  def mvnDeps = Agg(
+    mvn"org.scala-sbt:compiler-interface:${Deps.zinc.version}",
+    mvn"org.scala-sbt:util-interface:${Deps.zinc.version}"
   ) ++ Agg(
     if (JvmWorkerUtil.isScala3(crossScalaVersion))
-      ivy"org.scala-lang::scala3-compiler:${crossScalaVersion}"
-    else ivy"org.scala-lang:scala-compiler:${crossScalaVersion}"
+      mvn"org.scala-lang::scala3-compiler:${crossScalaVersion}"
+    else mvn"org.scala-lang:scala-compiler:${crossScalaVersion}"
   )
 
   def resources = Task {
@@ -675,15 +675,15 @@ trait BridgeModule extends MillPublishCrossScalaModule {
     Seq(PathRef(Task.dest))
   }
 
-  def compilerBridgeIvyDeps: T[Agg[Dep]] = Agg(
+  def compilerBridgemvnDeps: T[Agg[Dep]] = Agg(
     (if (JvmWorkerUtil.isScala3(crossScalaVersion))
-       ivy"org.scala-lang:scala3-sbt-bridge:${crossScalaVersion}"
-     else ivy"org.scala-sbt::compiler-bridge:${Deps.zinc.version}").exclude("*" -> "*")
+       mvn"org.scala-lang:scala3-sbt-bridge:${crossScalaVersion}"
+     else mvn"org.scala-sbt::compiler-bridge:${Deps.zinc.version}").exclude("*" -> "*")
   )
 
   def compilerBridgeSourceJars: T[Agg[PathRef]] = Task {
     defaultResolver().classpath(
-      compilerBridgeIvyDeps().map(bindDependency()),
+      compilerBridgemvnDeps().map(bindDependency()),
       sources = true
     )
   }
@@ -717,7 +717,7 @@ val dummyDeps: Seq[Dep] = Seq(
   Deps.TestDeps.zioTest,
   Deps.acyclic,
   Deps.scalacScoverage2Plugin,
-  ivy"com.lihaoyi:::ammonite:${Deps.ammoniteVersion}"
+  mvn"com.lihaoyi:::ammonite:${Deps.ammoniteVersion}"
 ) ++ Deps.transitiveDeps ++ Deps.RuntimeDeps.all
 
 implicit object DepSegment extends Cross.ToSegments[Dep]({ dep =>
@@ -734,5 +734,5 @@ implicit object DepSegment extends Cross.ToSegments[Dep]({ dep =>
 object dummy extends Cross[DependencyFetchDummy](dummyDeps)
 trait DependencyFetchDummy extends ScalaModule with Cross.Module[Dep] {
   def scalaVersion = Deps.scala2Version
-  def compileIvyDeps = Agg(crossValue)
+  def compilemvnDeps = Agg(crossValue)
 }
diff --git a/contrib/package.mill b/contrib/package.mill
index 93ca5c33ed2..7e20a6c409f 100644
--- a/contrib/package.mill
+++ b/contrib/package.mill
@@ -46,10 +46,10 @@ object `package` extends RootModule {
 
     // pure Java implementation
     def artifactSuffix: T[String] = ""
-    def scalaLibraryIvyDeps: T[Agg[Dep]] = Task { Agg.empty[Dep] }
-    def ivyDeps = Agg(build.Deps.sbtTestInterface)
-    def compileIvyDeps = Agg(build.Deps.testng)
-    def runIvyDeps = Agg(build.Deps.testng)
+    def scalaLibrarymvnDeps: T[Agg[Dep]] = Task { Agg.empty[Dep] }
+    def mvnDeps = Agg(build.Deps.sbtTestInterface)
+    def compilemvnDeps = Agg(build.Deps.testng)
+    def runmvnDeps = Agg(build.Deps.testng)
     def testModuleDeps: Seq[JavaModule] = super.testModuleDeps ++ Seq(build.scalalib)
     def docJar: T[PathRef] = super[JavaModule].docJar
   }
@@ -96,7 +96,7 @@ object `package` extends RootModule {
 
       def scalaVersion = build.Deps.play(playBinary).scalaVersion
       def moduleDeps = Seq(playlib.api)
-      def ivyDeps = Agg(build.Deps.osLib, build.Deps.play(playBinary).routesCompiler)
+      def mvnDeps = Agg(build.Deps.osLib, build.Deps.play(playBinary).routesCompiler)
     }
   }
 
@@ -133,15 +133,15 @@ object `package` extends RootModule {
         build.core.api,
         scoverage.api
       )
-      def compileIvyDeps = Task {
-        super.mandatoryIvyDeps() ++ Agg(
+      def compilemvnDeps = Task {
+        super.mandatorymvnDeps() ++ Agg(
           // compile-time only, need to provide the correct scoverage version at runtime
           build.Deps.scalacScoverage2Reporter,
           build.Deps.scalacScoverage2Domain,
           build.Deps.scalacScoverage2Serializer
         ) ++ Option.when(!JvmWorkerUtil.isScala3(scalaVersion()))(build.Deps.scalacScoverage2Plugin)
       }
-      def mandatoryIvyDeps = Agg.empty[Dep]
+      def mandatorymvnDeps = Agg.empty[Dep]
     }
   }
 
@@ -164,7 +164,7 @@ object `package` extends RootModule {
 
   object flyway extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.flywayCore)
+    def mvnDeps = Agg(build.Deps.flywayCore)
     def testModuleDeps = super.testModuleDeps ++ Seq(build.scalalib)
   }
 
@@ -175,7 +175,7 @@ object `package` extends RootModule {
 
   // object bloop extends ContribModule with BuildInfo {
   //   def compileModuleDeps = Seq(build.scalalib, build.scalajslib, build.scalanativelib)
-  //   def ivyDeps = Agg(build.Deps.bloopConfig.exclude("*" -> s"jsoniter-scala-core_2.13"))
+  //   def mvnDeps = Agg(build.Deps.bloopConfig.exclude("*" -> s"jsoniter-scala-core_2.13"))
   //   def testModuleDeps = super.testModuleDeps ++ Seq(
   //     build.scalalib,
   //     build.scalajslib,
@@ -189,17 +189,17 @@ object `package` extends RootModule {
 
   object artifactory extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.requests)
+    def mvnDeps = Agg(build.Deps.requests)
   }
 
   object codeartifact extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.requests)
+    def mvnDeps = Agg(build.Deps.requests)
   }
 
   object sonatypecentral extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.sonatypeCentralClient)
+    def mvnDeps = Agg(build.Deps.sonatypeCentralClient)
   }
 
   object versionfile extends ContribModule {
@@ -208,12 +208,12 @@ object `package` extends RootModule {
 
   object bintray extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.requests)
+    def mvnDeps = Agg(build.Deps.requests)
   }
 
   object gitlab extends ContribModule {
     def compileModuleDeps = Seq(build.scalalib)
-    def ivyDeps = Agg(build.Deps.requests, build.Deps.osLib)
+    def mvnDeps = Agg(build.Deps.requests, build.Deps.osLib)
     def testModuleDeps = super.testModuleDeps ++ Seq(build.scalalib)
   }
 
diff --git a/core/api/package.mill b/core/api/package.mill
index e0ba1139271..0e43ece780d 100644
--- a/core/api/package.mill
+++ b/core/api/package.mill
@@ -33,7 +33,7 @@ object `package` extends RootModule with build.MillStableScalaModule with BuildI
     BuildInfo.Value("coursierJvmIndexVersion", build.Deps.coursierJvmIndexVersion)
   )
 
-  def ivyDeps = Agg(
+  def mvnDeps = Agg(
     build.Deps.sbtTestInterface
   )
 }
diff --git a/core/codesig/package.mill b/core/codesig/package.mill
index 9d03aa073f3..5e8a383ba9b 100644
--- a/core/codesig/package.mill
+++ b/core/codesig/package.mill
@@ -12,7 +12,7 @@ import mill.scalalib._
  * - https://github.com/com-lihaoyi/mill/pull/2417
  */
 object `package` extends RootModule with build.MillPublishScalaModule {
-  override def ivyDeps = Agg(build.Deps.asmTree, build.Deps.osLib, build.Deps.pprint)
+  override def mvnDeps = Agg(build.Deps.asmTree, build.Deps.osLib, build.Deps.pprint)
   def moduleDeps = Seq(build.core.internal)
 
   override lazy val test: CodeSigTests = new CodeSigTests {}
@@ -47,8 +47,8 @@ object `package` extends RootModule with build.MillPublishScalaModule {
       val Array(prefix, suffix, rest) = caseName.split("-", 3)
       def moduleDir = super.moduleDir / prefix / suffix / rest
       def scalaVersion = build.Deps.scalaVersion
-      def ivyDeps = Task {
-        if (!caseName.contains("realistic") && !caseName.contains("sourcecode")) super.ivyDeps()
+      def mvnDeps = Task {
+        if (!caseName.contains("realistic") && !caseName.contains("sourcecode")) super.mvnDeps()
         else Agg(
           build.Deps.fastparse,
           build.Deps.scalatags,
diff --git a/core/constants/package.mill b/core/constants/package.mill
index b23be4e5f92..dc24426f1b1 100644
--- a/core/constants/package.mill
+++ b/core/constants/package.mill
@@ -13,6 +13,6 @@ object `package` extends RootModule with build.MillPublishJavaModule with BuildI
   def buildInfoMembers = Seq(BuildInfo.Value("millVersion", build.millVersion(), "Mill version."))
 
   object test extends JavaTests with TestModule.Junit4 {
-    def ivyDeps = Agg(build.Deps.junitInterface, build.Deps.commonsIo)
+    def mvnDeps = Agg(build.Deps.junitInterface, build.Deps.commonsIo)
   }
 }
diff --git a/core/define/package.mill b/core/define/package.mill
index a9ef9d12635..82b5257e2f9 100644
--- a/core/define/package.mill
+++ b/core/define/package.mill
@@ -10,12 +10,12 @@ import mill.scalalib._
 object `package` extends RootModule with build.MillStableScalaModule {
   def moduleDeps = Seq(build.core.api)
 
-  def compileIvyDeps = Task {
+  def compilemvnDeps = Task {
     if (scalaVersion().startsWith("3.")) Agg(build.Deps.scalaCompiler(scalaVersion()))
     else Agg(build.Deps.scalaReflect(scalaVersion()))
   }
 
-  def ivyDeps = Agg(
+  def mvnDeps = Agg(
     build.Deps.millModuledefs,
     // TODO: somewhere sourcecode is included transitively,
     // but we need the latest version to bring the macro improvements.
@@ -31,6 +31,6 @@ object `package` extends RootModule with build.MillStableScalaModule {
     build.Deps.jarjarabrams,
     build.Deps.mainargs,
     build.Deps.scalaparse,
-    ivy"org.apache.commons:commons-lang3:3.16.0"
+    mvn"org.apache.commons:commons-lang3:3.16.0"
   )
 }
diff --git a/core/internal/package.mill b/core/internal/package.mill
index 7431080708a..4d847dbc704 100644
--- a/core/internal/package.mill
+++ b/core/internal/package.mill
@@ -9,7 +9,7 @@ import mill._
 object `package` extends RootModule with build.MillPublishScalaModule {
   def moduleDeps = Seq(build.core.api, build.core.util)
 
-  def ivyDeps = Agg(
+  def mvnDeps = Agg(
     build.Deps.millModuledefs,
     // TODO: somewhere sourcecode is included transitively,
     // but we need the latest version to bring the macro improvements.
diff --git a/core/util/package.mill b/core/util/package.mill
index 4734a645fd7..97fd1e13d75 100644
--- a/core/util/package.mill
+++ b/core/util/package.mill
@@ -11,7 +11,7 @@ import mill.scalalib._
 object `package` extends RootModule with build.MillStableScalaModule with BuildInfo {
   def moduleDeps = Seq(build.core.api, build.core.constants, build.core.define)
 
-  def ivyDeps = Agg(
+  def mvnDeps = Agg(
     build.Deps.coursier,
     build.Deps.coursierJvm,
     build.Deps.jline,
diff --git a/example/large/multifile/10-multi-file-builds/bar/qux/package.mill b/example/large/multifile/10-multi-file-builds/bar/qux/package.mill
index c1433daaa70..57afb1c374f 100644
--- a/example/large/multifile/10-multi-file-builds/bar/qux/package.mill
+++ b/example/large/multifile/10-multi-file-builds/bar/qux/package.mill
@@ -2,5 +2,5 @@ package build.bar.qux
 import mill._, scalalib._
 
 object mymodule extends build.MyModule {
-  def ivyDeps = Seq(mvn"com.lihaoyi::scalatags:0.8.2")
+  def mvnDeps = Seq(mvn"com.lihaoyi::scalatags:0.8.2")
 }
diff --git a/example/large/multifile/10-multi-file-builds/foo/package.mill b/example/large/multifile/10-multi-file-builds/foo/package.mill
index b0868ec6577..e1909cc229a 100644
--- a/example/large/multifile/10-multi-file-builds/foo/package.mill
+++ b/example/large/multifile/10-multi-file-builds/foo/package.mill
@@ -3,5 +3,5 @@ import mill._, scalalib._
 
 object `package` extends RootModule with build.MyModule {
   def moduleDeps = Seq(build.bar.qux.mymodule)
-  def ivyDeps = Seq(mvn"com.lihaoyi::mainargs:0.4.0")
+  def mvnDeps = Seq(mvn"com.lihaoyi::mainargs:0.4.0")
 }
diff --git a/integration/package.mill b/integration/package.mill
index fb3771a61d8..6b76fedb694 100644
--- a/integration/package.mill
+++ b/integration/package.mill
@@ -118,7 +118,7 @@ object `package` extends RootModule {
     )
   }
   trait IdeIntegrationCrossModule extends IntegrationCrossModule {
-    def ivyDeps = super.ivyDeps() ++ Agg(
+    def mvnDeps = super.mvnDeps() ++ Agg(
       build.Deps.bsp4j
     )
   }
diff --git a/kotlinlib/package.mill b/kotlinlib/package.mill
index ffbdcb6df0b..d1f6bd051ef 100644
--- a/kotlinlib/package.mill
+++ b/kotlinlib/package.mill
@@ -52,15 +52,15 @@ object `package` extends RootModule with build.MillPublishScalaModule with Build
   object worker extends MillKotlinModule {
     def moduleDeps = Seq(build.testrunner)
 
-    override def compileIvyDeps: T[Agg[Dep]] = Agg(
+    override def compilemvnDeps: T[Agg[Dep]] = Agg(
       build.Deps.osLib
     )
 
     object impl extends MillKotlinModule {
       override def compileModuleDeps = Seq(worker)
-      def mandatoryIvyDeps = Agg.empty[Dep]
-      override def compileIvyDeps: T[Agg[Dep]] =
-        super.mandatoryIvyDeps() ++ Agg(
+      def mandatorymvnDeps = Agg.empty[Dep]
+      override def compilemvnDeps: T[Agg[Dep]] =
+        super.mandatorymvnDeps() ++ Agg(
           build.Deps.osLib,
           build.Deps.kotlinCompiler
         )
diff --git a/main/init/package.mill b/main/init/package.mill
index c967c052705..deaa9a494a2 100644
--- a/main/init/package.mill
+++ b/main/init/package.mill
@@ -73,13 +73,13 @@ object `package` extends RootModule with build.MillPublishScalaModule {
     /*
     object tree extends Cross[TreeModule](build.Deps.sbtScalaVersion212, build.Deps.scalaVersion)
     trait TreeModule extends build.MillPublishCrossScalaModule {
-      def ivyDeps = Agg(build.Deps.upickle)
+      def mvnDeps = Agg(build.Deps.upickle)
     }
      */
   }
   object gradle extends build.MillPublishScalaModule {
     def moduleDeps = Seq(buildgen)
-    def ivyDeps = Agg(
+    def mvnDeps = Agg(
       build.Deps.gradleApi,
       build.Deps.logback
     )
@@ -87,7 +87,7 @@ object `package` extends RootModule with build.MillPublishScalaModule {
   }
   object maven extends build.MillPublishScalaModule {
     def moduleDeps = Seq(buildgen)
-    def ivyDeps = Agg(
+    def mvnDeps = Agg(
       build.Deps.mavenEmbedder,
       build.Deps.mavenResolverConnectorBasic,
       build.Deps.mavenResolverSupplier,
@@ -120,8 +120,8 @@ object `package` extends RootModule with build.MillPublishScalaModule {
         extends Cross[ModelsModule](build.Deps.sbtScalaVersion212, build.Deps.scalaVersion)
     trait ModelsModule extends build.MillPublishCrossScalaModule {
       // def moduleDeps = Seq(buildgen.tree())
-      def ivyDeps = Agg(build.Deps.upickle)
-      def compileIvyDeps = Agg(build.Deps.sbt) // for definition references only
+      def mvnDeps = Agg(build.Deps.upickle)
+      def compilemvnDeps = Agg(build.Deps.sbt) // for definition references only
 
       def docJar =
         if (crossScalaVersion == build.Deps.scalaVersion)
@@ -139,7 +139,7 @@ object `package` extends RootModule with build.MillPublishScalaModule {
       private val scalaVersionString = build.Deps.sbtScalaVersion212
       def scalaVersion = scalaVersionString
       def moduleDeps = Seq(models(scalaVersionString))
-      def compileIvyDeps = Agg(build.Deps.sbt)
+      def compilemvnDeps = Agg(build.Deps.sbt)
       def assemblyRules = Seq(Rule.ExcludePattern("scala\\.*"))
     }
   }
diff --git a/main/package.mill b/main/package.mill
index 20136702d33..268c800b973 100644
--- a/main/package.mill
+++ b/main/package.mill
@@ -16,12 +16,12 @@ import mill.scalalib.api.JvmWorkerUtil
 object `package` extends RootModule with build.MillStableScalaModule {
 
   def moduleDeps = Seq(build.core.constants, build.core.util)
-  def ivyDeps = Agg(
+  def mvnDeps = Agg(
     build.Deps.nativeTerminal,
     build.Deps.coursierInterface,
     build.Deps.logback,
     build.Deps.jgraphtCore,
-    ivy"guru.nidi:graphviz-java-min-deps:0.18.1"
+    mvn"guru.nidi:graphviz-java-min-deps:0.18.1"
       // We only need the in-memory library for some stuff, and don't
       // need the heavyweight v8 binary that comes bundled with it
       .exclude(
@@ -30,7 +30,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
       )
   )
 
-  def compileIvyDeps = Task {
+  def compilemvnDeps = Task {
     if (JvmWorkerUtil.isScala3(scalaVersion())) Agg.empty
     else Agg(build.Deps.scalaReflect(scalaVersion()))
   }
@@ -39,7 +39,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
 
   object graphviz extends build.MillPublishScalaModule {
     def moduleDeps = Seq(build.main, build.scalalib)
-    def ivyDeps = Agg(build.Deps.jgraphtCore) ++ build.Deps.graphvizJava ++ build.Deps.javet
+    def mvnDeps = Agg(build.Deps.jgraphtCore) ++ build.Deps.graphvizJava ++ build.Deps.javet
   }
 
   def testModuleDeps = super.testModuleDeps ++ Seq(build.testkit)
diff --git a/mill-build/build.mill b/mill-build/build.mill
index 521b6533dd6..416788f7201 100644
--- a/mill-build/build.mill
+++ b/mill-build/build.mill
@@ -7,15 +7,15 @@ object `package` extends MillBuildRootModule {
   private def sources0 = Task.Sources("src-testkit")
   def sources = super.sources() ++ sources0()
 
-  override def ivyDeps = Agg(
-//    ivy"de.tototec::de.tobiasroeser.mill.vcs.version::0.4.1",
-//    ivy"com.github.lolgab::mill-mima::0.1.1",
-    ivy"net.sourceforge.htmlcleaner:htmlcleaner:2.29",
+  override def mvnDeps = Agg(
+//    mvn"de.tototec::de.tobiasroeser.mill.vcs.version::0.4.1",
+//    mvn"com.github.lolgab::mill-mima::0.1.1",
+    mvn"net.sourceforge.htmlcleaner:htmlcleaner:2.29",
     // TODO: implement empty version for ivy deps as we do in import parser
-    ivy"com.lihaoyi::mill-contrib-buildinfo:${mill.api.BuildInfo.millVersion}",
-//    ivy"com.goyeau::mill-scalafix::0.5.0",
-    ivy"com.lihaoyi::mill-main-graphviz:${mill.api.BuildInfo.millVersion}",
+    mvn"com.lihaoyi::mill-contrib-buildinfo:${mill.api.BuildInfo.millVersion}",
+//    mvn"com.goyeau::mill-scalafix::0.5.0",
+    mvn"com.lihaoyi::mill-main-graphviz:${mill.api.BuildInfo.millVersion}",
     // TODO: document, why we have this dependency
-    ivy"org.jsoup:jsoup:1.18.1"
+    mvn"org.jsoup:jsoup:1.18.1"
   )
 }
diff --git a/runner/package.mill b/runner/package.mill
index 167ad20b477..da8f98aa617 100644
--- a/runner/package.mill
+++ b/runner/package.mill
@@ -12,19 +12,19 @@ import mill.contrib.buildinfo.BuildInfo
 object `package` extends RootModule with build.MillPublishScalaModule {
 
   object `worker-api` extends build.MillPublishScalaModule {
-    // def ivyDeps = Agg(build.Deps.osLib)
+    // def mvnDeps = Agg(build.Deps.osLib)
   }
 
   object worker extends build.MillPublishScalaModule {
     def moduleDeps = Seq(`worker-api`)
-    def ivyDeps = Agg(build.Deps.scalaCompiler(scalaVersion()))
+    def mvnDeps = Agg(build.Deps.scalaCompiler(scalaVersion()))
 
     private[runner] def bootstrapDeps = Task {
       val moduleDep = {
         val m = artifactMetadata()
         s"${m.group}:${m.id}:${m.version}"
       }
-      val boundIvys = allIvyDeps()
+      val boundIvys = allmvnDeps()
       val nameFilter = "scala(.*)-compiler(.*)".r
       Agg(moduleDep) ++ boundIvys.collect {
         case dep if nameFilter.matches(dep.name) =>
@@ -43,7 +43,7 @@ object `package` extends RootModule with build.MillPublishScalaModule {
     def fix(args: String*): Command[Unit] = Task.Command {}
     def buildInfoPackageName = "mill.runner.client"
     def moduleDeps = Seq(build.runner.server.client)
-    def ivyDeps = Agg(
+    def mvnDeps = Agg(
       build.Deps.nativeTerminal,
       build.Deps.coursier,
       build.Deps.coursierInterface,
@@ -84,7 +84,7 @@ object `package` extends RootModule with build.MillPublishScalaModule {
     )
   }
 
-  def ivyDeps = Seq(
+  def mvnDeps = Seq(
     build.Deps.sourcecode,
     build.Deps.osLib,
     build.Deps.mainargs,
diff --git a/runner/server/client/package.mill b/runner/server/client/package.mill
index a63624f0f43..46761726747 100644
--- a/runner/server/client/package.mill
+++ b/runner/server/client/package.mill
@@ -20,6 +20,6 @@ object `package` extends RootModule with build.MillPublishJavaModule with BuildI
   def moduleDeps = Seq(build.core.constants)
 
   object test extends JavaTests with TestModule.Junit4 {
-    def ivyDeps = Agg(build.Deps.junitInterface, build.Deps.commonsIo)
+    def mvnDeps = Agg(build.Deps.junitInterface, build.Deps.commonsIo)
   }
 }
diff --git a/runner/server/package.mill b/runner/server/package.mill
index 42beab1cf5d..1c3c3c713ae 100644
--- a/runner/server/package.mill
+++ b/runner/server/package.mill
@@ -10,7 +10,7 @@ import mill._
 object `package` extends RootModule with build.MillPublishScalaModule {
   def moduleDeps = Seq(build.runner.client, build.core.api)
 
-  def ivyDeps = Seq(
+  def mvnDeps = Seq(
     build.Deps.sourcecode,
     build.Deps.osLib,
     build.Deps.mainargs,
diff --git a/scalajslib/package.mill b/scalajslib/package.mill
index ede362b5fd9..be3be042bc0 100644
--- a/scalajslib/package.mill
+++ b/scalajslib/package.mill
@@ -38,7 +38,7 @@ object `package` extends RootModule with build.MillStableScalaModule with BuildI
   }
 
   object `worker-api` extends build.MillPublishScalaModule {
-    def ivyDeps = Agg(build.Deps.sbtTestInterface)
+    def mvnDeps = Agg(build.Deps.sbtTestInterface)
   }
 
   object worker extends Cross[WorkerModule]("1")
@@ -47,8 +47,8 @@ object `package` extends RootModule with build.MillStableScalaModule with BuildI
     def scalajsWorkerVersion = crossValue
     def moduleDir: os.Path = super.moduleDir / scalajsWorkerVersion
     def compileModuleDeps = Seq(build.scalajslib.`worker-api`, build.core.constants, build.core.api)
-    def mandatoryIvyDeps = Agg.empty[Dep]
-    def compileIvyDeps = super.mandatoryIvyDeps() ++ Agg(
+    def mandatorymvnDeps = Agg.empty[Dep]
+    def compilemvnDeps = super.mandatorymvnDeps() ++ Agg(
       build.Deps.Scalajs_1.scalajsLinker,
       build.Deps.Scalajs_1.scalajsSbtTestAdapter,
       build.Deps.Scalajs_1.scalajsEnvNodejs,
diff --git a/scalalib/package.mill b/scalalib/package.mill
index e4b7fec6f5e..5692cc95f39 100644
--- a/scalalib/package.mill
+++ b/scalalib/package.mill
@@ -17,7 +17,7 @@ import mill.define.Cross
 object `package` extends RootModule with build.MillStableScalaModule {
 
   def moduleDeps = Seq(build.core.util, build.scalalib.api, build.testrunner)
-  def ivyDeps = {
+  def mvnDeps = {
     Agg(build.Deps.scalafmtDynamic, build.Deps.scalaXml) ++ {
       // despite compiling with Scala 3, we need to include scala-reflect
       // for the scala.reflect.internal.util.ScalaClassLoader
@@ -27,7 +27,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
       Agg(build.Deps.scalaReflect(scalaVersion()))
     }
   }
-  def testIvyDeps = super.testIvyDeps() ++ Agg(build.Deps.TestDeps.scalaCheck)
+  def testmvnDeps = super.testmvnDeps() ++ Agg(build.Deps.TestDeps.scalaCheck)
   def testTransitiveDeps =
     super.testTransitiveDeps() ++ Seq(worker.testDep(), `classgraph-worker`.testDep())
   def testForkEnv = {
@@ -36,7 +36,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
   }
 
   object backgroundwrapper extends build.MillPublishJavaModule with build.MillJavaModule {
-    def ivyDeps = Agg(build.Deps.sbtTestInterface)
+    def mvnDeps = Agg(build.Deps.sbtTestInterface)
   }
 
   object api extends build.MillStableScalaModule with BuildInfo {
@@ -93,7 +93,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
 
   object worker extends build.MillPublishScalaModule with BuildInfo {
     def moduleDeps = Seq(api, build.core.util)
-    def ivyDeps = Agg(build.Deps.zinc, build.Deps.log4j2Core)
+    def mvnDeps = Agg(build.Deps.zinc, build.Deps.log4j2Core)
     def buildInfoPackageName = "mill.scalalib.worker"
     def buildInfoObjectName = "Versions"
     def buildInfoMembers = Seq(
@@ -103,6 +103,6 @@ object `package` extends RootModule with build.MillStableScalaModule {
 
   object `classgraph-worker` extends build.MillPublishScalaModule {
     def moduleDeps = Seq(api, build.core.util)
-    def ivyDeps = Agg(build.Deps.classgraph)
+    def mvnDeps = Agg(build.Deps.classgraph)
   }
 }
diff --git a/scalanativelib/package.mill b/scalanativelib/package.mill
index 2b4a39cb222..ce05581991f 100644
--- a/scalanativelib/package.mill
+++ b/scalanativelib/package.mill
@@ -10,7 +10,7 @@ object `package` extends RootModule with build.MillStableScalaModule {
     super.testTransitiveDeps() ++ Seq(worker("0.5").testDep())
 
   object `worker-api` extends build.MillPublishScalaModule {
-    def ivyDeps = Agg(build.Deps.sbtTestInterface)
+    def mvnDeps = Agg(build.Deps.sbtTestInterface)
   }
 
   object worker extends Cross[WorkerModule]("0.5")
@@ -19,9 +19,9 @@ object `package` extends RootModule with build.MillStableScalaModule {
     def scalaNativeWorkerVersion = crossValue
     def moduleDir: os.Path = super.moduleDir / scalaNativeWorkerVersion
     def compileModuleDeps = Seq(`worker-api`)
-    def compileIvyDeps = scalaNativeWorkerVersion match {
+    def compilemvnDeps = scalaNativeWorkerVersion match {
       case "0.5" =>
-        super.mandatoryIvyDeps() ++ Agg(
+        super.mandatorymvnDeps() ++ Agg(
           build.Deps.osLib,
           build.Deps.Scalanative_0_5.scalanativeTools,
           build.Deps.Scalanative_0_5.scalanativeUtil,
@@ -29,6 +29,6 @@ object `package` extends RootModule with build.MillStableScalaModule {
           build.Deps.Scalanative_0_5.scalanativeTestRunner
         )
     }
-    def mandatoryIvyDeps = Agg.empty[mill.scalalib.Dep]
+    def mandatorymvnDeps = Agg.empty[mill.scalalib.Dep]
   }
 }
diff --git a/testkit/package.mill b/testkit/package.mill
index fc62668ea7f..530a65b51ab 100644
--- a/testkit/package.mill
+++ b/testkit/package.mill
@@ -8,7 +8,7 @@ import mill._
  */
 object `package` extends RootModule with build.MillPublishScalaModule {
   def moduleDeps = Seq(build.core.eval, build.core.util, build.main)
-  def ivyDeps = Agg(build.Deps.TestDeps.utest)
+  def mvnDeps = Agg(build.Deps.TestDeps.utest)
 
   def sources =
     super.sources() ++
diff --git a/testrunner/package.mill b/testrunner/package.mill
index 11d766a2345..f2abf5ff0c8 100644
--- a/testrunner/package.mill
+++ b/testrunner/package.mill
@@ -10,6 +10,6 @@ object `package` extends RootModule with build.MillPublishScalaModule {
   def moduleDeps = Seq(build.scalalib.api, entrypoint, build.core.util)
 
   object entrypoint extends build.MillPublishJavaModule {
-    override def ivyDeps = Agg(build.Deps.sbtTestInterface)
+    override def mvnDeps = Agg(build.Deps.sbtTestInterface)
   }
 }

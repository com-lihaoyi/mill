package build.libs.androidlib

import coursier.MavenRepository
import mill.*
import mill.contrib.buildinfo.BuildInfo
import mill.scalalib.*
import millbuild.*

// TODO when android hardcoded versions are fixed, generate a build info
// TODO change MillPublishScalaModule to MillStableScalaModule after mill version when androidlib is stable and released.
object `package` extends MillPublishScalaModule with BuildInfo {

  def moduleDeps = Seq(build.libs.javalib, build.libs.kotlinlib)
  def transitiveLocalTestOverrides =
    super.transitiveLocalTestOverrides() ++ Seq(
      build.libs.kotlinlib.worker.localTestOverride()
    )

  def buildInfoPackageName = "mill.androidlib"
  def buildInfoObjectName = "Versions"
  def buildInfoMembers = Seq(
    BuildInfo.Value(
      "manifestMergerVersion",
      Deps.AndroidDeps.manifestMerger.version,
      "Version of ManifestMerger"
    ),
    BuildInfo.Value(
      "bundleToolVersion",
      Deps.AndroidDeps.bundleTool.version,
      "Version of BundleTool"
    ),
    BuildInfo.Value(
      "ndkVersion",
      Deps.AndroidDeps.ndkVersion,
      "Version of NDK (Native Development Kit)"
    ),
    BuildInfo.Value("cmakeVersion", Deps.AndroidDeps.cmakeVersion, "Version of cmake"),
    BuildInfo.Value("layoutLibVersion", Deps.AndroidDeps.layoutLibVersion, "Version of LayoutLib"),
    BuildInfo.Value(
      "composePreviewRendererVersion",
      Deps.AndroidDeps.composePreviewRenderer.version,
      "Version of ComposePreviewRenderer"
    ),
    BuildInfo.Value("uiToolingVersion", Deps.AndroidDeps.uiTooling.version, "Version of uiTooling"),
    BuildInfo.Value(
      "screenshotValidationJunitEngineVersion",
      Deps.AndroidDeps.screenshotValidationJunitEngine.version,
      "Version of screenshotValidationJunitEngine"
    )
  )

  trait MillAndroidModule extends MillPublishScalaModule {
    override def javacOptions = {
      val release = Seq("-source", "1.8", "-target", "1.8")
      release ++ Seq("-encoding", "UTF-8", "-deprecation")
    }

    override def repositoriesTask = Task.Anon {
      super.repositoriesTask() :+ MavenRepository("https://maven.google.com/")
    }
  }

  object api extends MillAndroidModule {
    def moduleDeps = Seq(build.libs.javalib.testrunner)

    override def compileMvnDeps: T[Seq[Dep]] = Task {
      super.compileMvnDeps() ++ Seq(
        Deps.androidTools
      )
    }
  }

  object hilt extends MillAndroidModule {
    override def moduleDeps = Seq(build.libs.androidlib)

    override def mvnDeps = Seq(
      Deps.hiltGradlePlugin,
      Deps.androidTools
    )
  }

}

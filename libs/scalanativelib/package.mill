package build.libs.scalanativelib
// imports
import mill._
import mill.T
import mill.define.Cross
import millbuild.*

object `package` extends MillStableScalaModule {
  def moduleDeps = Seq(build.libs.scalalib, `worker-api`)
  def transitiveLocalTestOverrides =
    super.transitiveLocalTestOverrides() ++ Seq(worker("0.5").localTestOverride())

  object `worker-api` extends MillPublishScalaModule {
    def mvnDeps = Seq(Deps.sbtTestInterface)
  }

  object worker extends Cross[WorkerModule]("0.5")

  trait WorkerModule extends MillPublishScalaModule with Cross.Module[String] {
    def scalaNativeWorkerVersion = crossValue
    def moduleDir: os.Path = super.moduleDir / scalaNativeWorkerVersion
    def compileModuleDeps = Seq(`worker-api`)
    def compileMvnDeps = scalaNativeWorkerVersion match {
      case "0.5" =>
        super.mandatoryMvnDeps() ++ Seq(
          Deps.osLib,
          Deps.Scalanative_0_5.scalanativeTools,
          Deps.Scalanative_0_5.scalanativeUtil,
          Deps.Scalanative_0_5.scalanativeNir,
          Deps.Scalanative_0_5.scalanativeTestRunner
        )
    }
    def mandatoryMvnDeps = Seq.empty[mill.scalalib.Dep]
  }
}

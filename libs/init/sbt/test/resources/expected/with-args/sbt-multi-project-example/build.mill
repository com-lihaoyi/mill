//| mill-version: SNAPSHOT
//| mill-jvm-version: zulu:21
package build

import mill.*
import mill.javalib.*
import mill.javalib.publish.*
import mill.scalalib.*

object `package` extends Module {

  object common extends PublishModule with SbtModule {

    def scalaVersion = "2.12.3"

    def scalacOptions = super.scalacOptions() ++ Seq(
      "-unchecked",
      "-feature",
      "-language:existentials",
      "-language:higherKinds",
      "-language:implicitConversions",
      "-language:postfixOps",
      "-deprecation",
      "-encoding",
      "utf8"
    )

    def scalacPluginMvnDeps = super.scalacPluginMvnDeps() ++
      Seq(mvn"org.wartremover::wartremover:2.2.1")

    def mvnDeps = super.mvnDeps() ++ Seq(
      mvn"ch.qos.logback:logback-classic:1.2.3",
      mvn"net.logstash.logback:logstash-logback-encoder:4.11",
      mvn"com.typesafe.scala-logging::scala-logging:3.7.2",
      mvn"org.slf4j:jcl-over-slf4j:1.7.25",
      mvn"com.typesafe:config:1.3.1",
      mvn"com.typesafe.akka::akka-stream:2.5.6"
    )

    def artifactName = "common"

    def jvmId = "zulu:11"

    def pomSettings = PomSettings(
      "This is the common module.",
      "com.pbassiner",
      "https://github.com/com-lihaoyi/mill",
      Seq(License(
        "",
        "Apache-2.0",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        "repo"
      )),
      VersionControl(
        Some("https://github.com/com-lihaoyi/mill"),
        Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
        None,
        None
      ),
      Seq(
        Developer("johnd", "John Doe", "https://example.com/johnd", None, None)
      )
    )

    def publishVersion = "0.1.0-SNAPSHOT"

    def repositories = super.repositories() ++ Seq(
      "https://oss.sonatype.org/service/local/repositories/releases/content/",
      "https://oss.sonatype.org/content/repositories/snapshots"
    )

    object test extends SbtTests with TestModule.ScalaTest {

      def mvnDeps = super.mvnDeps() ++ Seq(
        mvn"org.scalatest::scalatest:3.0.4",
        mvn"org.scalacheck::scalacheck:1.13.5"
      )

      def testParallelism = false

      def testSandboxWorkingDir = false

    }

  }

  object multi1 extends PublishModule with SbtModule {

    def scalaVersion = "2.12.3"

    def scalacOptions = super.scalacOptions() ++ Seq(
      "-unchecked",
      "-feature",
      "-language:existentials",
      "-language:higherKinds",
      "-language:implicitConversions",
      "-language:postfixOps",
      "-deprecation",
      "-encoding",
      "utf8",
      "-V"
    )

    def scalacPluginMvnDeps = super.scalacPluginMvnDeps() ++
      Seq(mvn"org.wartremover::wartremover:2.2.1")

    def mvnDeps = super.mvnDeps() ++ Seq(
      mvn"ch.qos.logback:logback-classic:1.2.3",
      mvn"net.logstash.logback:logstash-logback-encoder:4.11",
      mvn"com.typesafe.scala-logging::scala-logging:3.7.2",
      mvn"org.slf4j:jcl-over-slf4j:1.7.25",
      mvn"com.typesafe:config:1.3.1",
      mvn"com.typesafe.akka::akka-stream:2.5.6",
      mvn"com.github.julien-truffaut::monocle-core:1.4.0",
      mvn"com.github.julien-truffaut::monocle-macro:1.4.0"
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def artifactName = "multi1"

    def jvmId = "zulu:11"

    def pomSettings = PomSettings(
      "This is an sbt sample project for testing Mill's init command.",
      "com.pbassiner",
      "https://github.com/com-lihaoyi/mill",
      Seq(License(
        "",
        "Apache-2.0",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        "repo"
      )),
      VersionControl(
        Some("https://github.com/com-lihaoyi/mill"),
        Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
        None,
        None
      ),
      Seq(
        Developer("johnd", "John Doe", "https://example.com/johnd", None, None)
      )
    )

    def publishVersion = "0.1.0-SNAPSHOT"

    def repositories = super.repositories() ++ Seq(
      "https://oss.sonatype.org/service/local/repositories/releases/content/",
      "https://oss.sonatype.org/content/repositories/snapshots"
    )

    object test extends SbtTests with TestModule.ScalaTest {

      def mvnDeps = super.mvnDeps() ++ Seq(
        mvn"org.scalatest::scalatest:3.0.4",
        mvn"org.scalacheck::scalacheck:1.13.5"
      )

      def testParallelism = false

      def testSandboxWorkingDir = false

    }

  }

  object multi2 extends PublishModule with SbtModule {

    def scalaVersion = "2.12.3"

    def scalacOptions = super.scalacOptions() ++ Seq(
      "-unchecked",
      "-feature",
      "-language:existentials",
      "-language:higherKinds",
      "-language:implicitConversions",
      "-language:postfixOps",
      "-deprecation"
    )

    def scalacPluginMvnDeps = super.scalacPluginMvnDeps() ++
      Seq(mvn"org.wartremover::wartremover:2.2.1")

    def mvnDeps = super.mvnDeps() ++ Seq(
      mvn"ch.qos.logback:logback-classic:1.2.3",
      mvn"net.logstash.logback:logstash-logback-encoder:4.11",
      mvn"com.typesafe.scala-logging::scala-logging:3.7.2",
      mvn"org.slf4j:jcl-over-slf4j:1.7.25",
      mvn"com.typesafe:config:1.3.1",
      mvn"com.typesafe.akka::akka-stream:2.5.6",
      mvn"com.github.pureconfig::pureconfig:0.8.0"
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def artifactName = "multi2"

    def jvmId = "zulu:11"

    def pomSettings = PomSettings(
      "This is an sbt sample project for testing Mill's init command.",
      "com.pbassiner",
      "https://github.com/com-lihaoyi/mill",
      Seq(License(
        "",
        "Apache-2.0",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        "repo"
      )),
      VersionControl(
        Some("https://github.com/com-lihaoyi/mill"),
        Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
        None,
        None
      ),
      Seq(
        Developer("johnd", "John Doe", "https://example.com/johnd", None, None)
      )
    )

    def publishVersion = "0.1.0-SNAPSHOT"

    def repositories = super.repositories() ++ Seq(
      "https://oss.sonatype.org/service/local/repositories/releases/content/",
      "https://oss.sonatype.org/content/repositories/snapshots"
    )

    object test extends SbtTests with TestModule.ScalaTest {

      def mvnDeps = super.mvnDeps() ++ Seq(
        mvn"org.scalatest::scalatest:3.0.4",
        mvn"org.scalacheck::scalacheck:1.13.5"
      )

      def testParallelism = false

      def testSandboxWorkingDir = false

    }

  }

  object nested extends Module {

    object nested extends PublishModule with SbtModule {

      def scalaVersion = "2.12.3"

      def scalacOptions = super.scalacOptions() ++ Seq(
        "-unchecked",
        "-feature",
        "-language:existentials",
        "-language:higherKinds",
        "-language:implicitConversions",
        "-language:postfixOps",
        "-deprecation",
        "-encoding",
        "utf8"
      )

      def scalacPluginMvnDeps = super.scalacPluginMvnDeps() ++
        Seq(mvn"org.wartremover::wartremover:2.2.1")

      def mvnDeps = super.mvnDeps() ++ Seq(
        mvn"io.netty:netty-transport-native-epoll:4.1.118.Final;classifier=linux-x86_64;type=pom;exclude=io.netty:netty-transport-native-epoll"
      )

      def artifactName = "nested"

      def jvmId = "zulu:11"

      def pomSettings = PomSettings(
        "This is an sbt sample project for testing Mill's init command.",
        "com.pbassiner",
        "https://github.com/com-lihaoyi/mill",
        Seq(License(
          "",
          "Apache-2.0",
          "https://www.apache.org/licenses/LICENSE-2.0.txt",
          false,
          false,
          "repo"
        )),
        VersionControl(
          Some("https://github.com/com-lihaoyi/mill"),
          Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
          None,
          None
        ),
        Seq(Developer(
          "johnd",
          "John Doe",
          "https://example.com/johnd",
          None,
          None
        ))
      )

      def publishVersion = "0.1.0-SNAPSHOT"

      def repositories = super.repositories() ++ Seq(
        "https://oss.sonatype.org/service/local/repositories/releases/content/",
        "https://oss.sonatype.org/content/repositories/snapshots"
      )

    }

  }

}

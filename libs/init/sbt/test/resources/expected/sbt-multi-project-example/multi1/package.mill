package build.multi1

import build._
import mill.javalib._
import mill.javalib.publish._
import mill.scalalib._

object `package` extends PublishModule with SbtModule {
  def scalaVersion = "2.12.3"

  def scalacOptions = super.scalacOptions() ++ Seq(
    "-unchecked",
    "-feature",
    "-language:existentials",
    "-language:higherKinds",
    "-language:implicitConversions",
    "-language:postfixOps",
    "-deprecation",
    "-encoding",
    "utf8",
    "-V"
  )
  def scalacPluginMvnDeps = super.scalacPluginMvnDeps() ++ Seq(Deps.wartremover)

  def mvnDeps = super.mvnDeps() ++ Seq(
    Deps.logbackClassic,
    Deps.logstashLogbackEncoder,
    Deps.scalaLogging,
    Deps.jclOverSlf4j,
    Deps.config,
    Deps.akkaStream,
    Deps.monocleCore,
    Deps.monocleMacro
  )

  def moduleDeps = super.moduleDeps ++ Seq(build.common)

  def pomSettings = PomSettings(
    "This is an sbt sample project for testing Mill's init command.",
    "com.pbassiner",
    "https://github.com/com-lihaoyi/mill",
    Seq(License(
      "Apache-2.0",
      "Apache-2.0",
      "https://www.apache.org/licenses/LICENSE-2.0.txt",
      false,
      false,
      ""
    )),
    VersionControl(
      Some("https://github.com/com-lihaoyi/mill"),
      Some("scm:git:https://github.com/com-lihaoyi/mill.git"),
      None,
      None
    ),
    Seq(Developer("johnd", "John Doe", "https://example.com/johnd", None, None))
  )

  def publishVersion = "0.1.0-SNAPSHOT"

  object test extends SbtTests with TestModule.ScalaTest {

    def mandatoryMvnDeps = super.mandatoryMvnDeps() ++
      Seq(Deps.scalatest, Deps.scalacheck)
  }
}

//| mill-version: SNAPSHOT
//| mill-jvm-version: zulu:21
//| mill-jvm-opts: ["-Xmx2g", "-XX:MaxMetaspaceSize=512m"]
package build

import mill._
import mill.javalib._
import mill.javalib.publish._

object `package` extends Module {

  object app extends MavenModule with PublishModule {

    def mvnDeps = super.mvnDeps() ++
      Seq(mvn"org.apache.commons:commons-text:1.13.0")

    def moduleDeps = super.moduleDeps ++ Seq(build.utilities)

    def javacOptions = super.javacOptions() ++
      Seq("-source", "21", "-target", "21")

    def pomSettings = PomSettings(
      "",
      "org.gradle.sample",
      "http://www.example.com/library",
      Seq(License(
        "",
        "The Apache License, Version 2.0",
        "http://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        ""
      )),
      VersionControl(
        Some("http://example.com/my-library/"),
        Some("scm:git:git://example.com/my-library.git"),
        Some("scm:git:ssh://example.com/my-library.git"),
        None
      ),
      Seq(Developer("johnd", "John Doe", "", None, None))
    )

    def publishVersion = "unspecified"

    def publishProperties = super.publishProperties() ++
      Map(("myProp", "value"), ("prop.with.dots", "anotherValue"))

    def jvmId = "zulu:21"

    object test extends MavenTests with TestModule.Junit5 {

      def mvnDeps = super.mvnDeps() ++
        Seq(mvn"org.junit.jupiter:junit-jupiter:5.12.1")

      def runMvnDeps = super.runMvnDeps() ++
        Seq(mvn"org.junit.platform:junit-platform-launcher")

      def testParallelism = false

      def testSandboxWorkingDir = false
    }

  }
  object list extends MavenModule with PublishModule {

    def javacOptions = super.javacOptions() ++
      Seq("-source", "21", "-target", "21")

    def pomSettings = PomSettings(
      "",
      "org.gradle.sample",
      "http://www.example.com/library",
      Seq(License(
        "",
        "The Apache License, Version 2.0",
        "http://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        ""
      )),
      VersionControl(
        Some("http://example.com/my-library/"),
        Some("scm:git:git://example.com/my-library.git"),
        Some("scm:git:ssh://example.com/my-library.git"),
        None
      ),
      Seq(Developer("johnd", "John Doe", "", None, None))
    )

    def publishVersion = "unspecified"

    def publishProperties = super.publishProperties() ++
      Map(("myProp", "value"), ("prop.with.dots", "anotherValue"))

    def jvmId = "zulu:21"

    object test extends MavenTests with TestModule.Junit5 {

      def mvnDeps = super.mvnDeps() ++
        Seq(mvn"org.junit.jupiter:junit-jupiter:5.12.1")

      def runMvnDeps = super.runMvnDeps() ++
        Seq(mvn"org.junit.platform:junit-platform-launcher")

      def testParallelism = false

      def testSandboxWorkingDir = false
    }

  }
  object utilities extends MavenModule with PublishModule {

    def moduleDeps = super.moduleDeps ++ Seq(build.list)

    def javacOptions = super.javacOptions() ++
      Seq("-source", "21", "-target", "21")

    def pomSettings = PomSettings(
      "",
      "org.gradle.sample",
      "http://www.example.com/library",
      Seq(License(
        "",
        "The Apache License, Version 2.0",
        "http://www.apache.org/licenses/LICENSE-2.0.txt",
        false,
        false,
        ""
      )),
      VersionControl(
        Some("http://example.com/my-library/"),
        Some("scm:git:git://example.com/my-library.git"),
        Some("scm:git:ssh://example.com/my-library.git"),
        None
      ),
      Seq(Developer("johnd", "John Doe", "", None, None))
    )

    def publishVersion = "unspecified"

    def publishProperties = super.publishProperties() ++
      Map(("myProp", "value"), ("prop.with.dots", "anotherValue"))

    def jvmId = "zulu:21"

    object test extends MavenTests with TestModule.Junit5 {

      def mvnDeps = super.mvnDeps() ++
        Seq(mvn"org.junit.jupiter:junit-jupiter:5.12.1")

      def runMvnDeps = super.runMvnDeps() ++
        Seq(mvn"org.junit.platform:junit-platform-launcher")

      def testParallelism = false

      def testSandboxWorkingDir = false
    }

  }
}

package build.libs.groovylib

import mill.*
import mill.contrib.buildinfo.BuildInfo
import mill.scalalib.*
import millbuild.*

object `package` extends MillPublishScalaModule with BuildInfo {

  def moduleDeps = Seq(build.libs.util, build.libs.javalib, build.libs.javalib.testrunner, api)
  def localTestExtraModules: Seq[MillJavaModule] =
    super.localTestExtraModules ++ Seq(worker)

  override def testMvnDeps: T[Seq[Dep]] = super.testMvnDeps() ++ Seq(
    Deps.asmTree
  )
  
  def buildInfoPackageName = "mill.groovylib"
  def buildInfoObjectName = "Versions"
  def buildInfoMembers = Seq(
    BuildInfo.Value("groovyVersion", Deps.groovyVersion, "Version of Groovy")
  )

  trait MillGroovyModule extends MillPublishScalaModule {
    override def javacOptions = super.javacOptions() ++ {
      Seq("-release", "8", "-encoding", "UTF-8", "-deprecation")
    }
  }

  object api extends MillGroovyModule {
    def moduleDeps = Seq(build.libs.javalib.testrunner)

    override def compileMvnDeps: T[Seq[Dep]] = Seq(
      Deps.osLib
    )
  }

  object worker extends MillGroovyModule {
    override def compileModuleDeps = Seq(api)

    def mandatoryMvnDeps = Seq.empty[Dep]

    override def compileMvnDeps: T[Seq[Dep]] =
      super.mandatoryMvnDeps() ++ Seq(
        Deps.osLib,
        Deps.groovyCompiler
      )
  }

}

// Mill Single-file {language} programs can make it more convenient to script simple command-line
// workflows interacting with files, subprocesses, and HTTP endpoints.
//
//// SNIPPET:CUSTOM
// Mill Scala scripts come with a number of bundled libraries for these use cases. These
// are largely the same as the xref:fundamentals/bundled-libraries.adoc[libraries available in Mill build files]:
//
// - https://github.com/com-lihaoyi/os-lib[OS-Lib]
// - https://github.com/com-lihaoyi/upickle[uPickle]
// - https://github.com/com-lihaoyi/requests-scala[Requests-Scala]
// - https://github.com/com-lihaoyi/mainargs[MainArgs]
// - https://github.com/com-lihaoyi/PPrint[PPrint]
//
//
// These libraries can make it more convenient to script simple command-line workflows
// interacting with files, subprocesses, and HTTP endpoints. For example, below is a simple
// script using these libraries to crawl wikipedia and save the crawl results to a file:

//// SNIPPET:FILE
/** See Also: Crawler.scala */

/** Usage
> ./mill Crawler.scala --start-article singapore --depth 2
... seen: HashSet(
  "Calling code",
  "+65",
  "British Empire",
  "1st Parliament of Singapore",
...
)

> cat fetched.json
[
    "Calling code",
    "+65",
    "British Empire",
    "1st Parliament of Singapore",
    ...
]

*/

// These bundled libraries are only available in single-file scripts for convenience; in
// config-based modules or programmatic modules, you would need to add them to `mvnDeps` explicitly.
// You can also disable use of these libraries in scripts via `//| includDefaultScriptMvnDeps: false`.
// And as we saw earlier, you can include any other libraries you with using `//| mvnDeps`.
//
//// SNIPPET:END
//
// While initially single-file {language} programs may be a bit more verbose than the equivalent
// Bash script containing `cp` or `curl` commands, as the script grows in complexity the value
// of IDE support, typechecking, and JVM libraries makes writing them in {language} an attractive
// proposition. This is especially true if you already have developers fluent in {language} which
// may not be as familiar with the intricacies of writing robust and maintainable Bash code.

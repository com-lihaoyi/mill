// This example demonstrates how to define a Mill project with a `build.mill.yaml`
// that can be packaged into a Graal native executable. To do so, your module must extend
// `mill.scalalib.NativeImageModule`, and set your `jvmId` to a GraalVM distribution as
// shown below. You can pass native-image specific command-line flags via `nativeImageOptions`

/** See Also: build.mill.yaml */

/** Usage

> ./mill nativeImage

> out/nativeImage.dest/native-executable
Hello Graal Native: 24...
*/

// This generates an `out/nativeImage.dest/native-executable` binary that you can run later.
// These native binaries do not need a JVM installed in order to run, but they do require
// that the OS/CPU architecture that they are run on is the same as that on which they were built.
// See xref:javalib/publishing.adoc#_building_native_image_binaries_with_graal_vm[Building
// Native Image Binaries with Graal VM] for more details.
//

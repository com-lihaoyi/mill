package build

import mill._
import mill.javalib.android.{AndroidSdkModule, AndroidTestModule}
import mill.kotlinlib._
import mill.kotlinlib.android.{AndroidAppKotlinModule, AndroidHiltSupport}
import mill.javalib.android.AndroidBuildConfig

// Create and configure an Android SDK module to manage Android SDK paths and tools.
object androidSdkModule0 extends AndroidSdkModule {
  def buildToolsVersion = "35.0.0"
}

// Mill configuration for the Android Todo App project.
object app extends AndroidAppKotlinModule with AndroidBuildConfig with AndroidHiltSupport {

  def kotlinVersion = "2.0.21"
  def kotlinLanguageVersion = "1.9"

  def kspVersion = "1.0.28"

  def androidApplicationNamespace = "com.example.android.architecture.blueprints.todoapp"
  def androidApplicationId = "com.example.android.architecture.blueprints.main"

  def androidSdkModule = mill.define.ModuleRef(androidSdkModule0)

  def androidCompileSdk = 35

  def androidMinSdk = 26

  def androidEnableCompose = true

  def androidIsDebug = true

  def mvnDeps: T[Agg[Dep]] = Agg(
    mvn"androidx.core:core-ktx:1.15.0",
    mvn"androidx.appcompat:appcompat:1.7.0",
    mvn"androidx.annotation:annotation:1.9.1",
    mvn"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0",
    mvn"com.jakewharton.timber:timber:5.0.1",
    mvn"androidx.test.espresso:espresso-idling-resource:3.6.1",
    mvn"androidx.room:room-runtime:2.6.1",
    mvn"androidx.room:room-ktx:2.6.1",
    mvn"androidx.compose:compose-bom:2024.12.01",
    mvn"androidx.activity:activity-compose:1.10.0",
    mvn"androidx.compose.foundation:foundation:1.7.6",
    mvn"androidx.compose.animation:animation-core:1.7.6",
    mvn"androidx.compose.foundation:foundation-android:1.7.6",
    mvn"androidx.compose.foundation:foundation-layout:1.7.6",
    mvn"androidx.compose.animation:animation:1.7.6",
    mvn"androidx.compose.material3:material3:1.3.1",
    mvn"androidx.compose.material:material:1.7.6",
    mvn"androidx.compose.material:material-android:1.7.6",
    mvn"androidx.compose.material:material-icons-core:1.7.6",
    mvn"androidx.compose.material:material-ripple-android:1.7.6",
    mvn"androidx.compose.material:material-icons-extended:1.7.6",
    mvn"androidx.compose.ui:ui-tooling-preview:1.7.6",
    mvn"androidx.navigation:navigation-compose:2.8.5",
    mvn"androidx.compose.ui:ui:1.7.6",
    mvn"androidx.compose.ui:ui-android:1.7.6",
    mvn"androidx.compose.ui:ui-unit:1.7.6",
    mvn"androidx.compose.ui:ui-text:1.7.6",
    mvn"androidx.compose.ui:ui-graphics:1.7.6",
    mvn"androidx.compose.ui:ui:1.7.6",
    mvn"androidx.lifecycle:lifecycle-runtime-compose:2.8.7",
    mvn"androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7",
    mvn"androidx.lifecycle:lifecycle-viewmodel-compose-android:2.8.7",
    mvn"com.google.accompanist:accompanist-appcompat-theme:0.36.0"
      .exclude("androix.appcompat" -> "appcompat"),
    mvn"androidx.compose.material:material-icons-core-android:1.7.6",
    mvn"com.google.dagger:hilt-android:2.56",
    mvn"androidx.hilt:hilt-navigation-compose:1.2.0",
    mvn"com.google.accompanist:accompanist-swiperefresh:0.36.0",
    mvn"androidx.compose:compose-bom:2024.12.01",
    mvn"androidx.customview:customview-poolingcontainer:1.0.0"
  )

  def kotlinSymbolProcessors: T[Agg[Dep]] = Agg(
    mvn"androidx.room:room-compiler:2.6.1",
    mvn"com.google.dagger:hilt-android-compiler:2.56"
  )

  def kotlincPluginMvnDeps: T[Seq[Dep]] = Task {
    Seq(
      mvn"org.jetbrains.kotlin:kotlin-compose-compiler-plugin-embeddable:${kotlinVersion()}"
    )
  }

  private val dependencyPinning = Map(
    "android.collection" -> "1.4.4",
    "androidx.lifecycle" -> "2.8.7",
    "androidx.compose.runtime" -> "1.7.6",
    "androidx.compose.material" -> "1.7.6",
    "androidx.compose.ui" -> "1.7.6",
    "androidx.appcompat" -> "1.7.0",
    "androidx.emoji2" -> "1.3.0",
    "androidx.activity" -> "1.10.0",
    "androidx.compose.foundation" -> "1.7.6",
    "androidx.compose.animation" -> "1.7.6",
    "androidx.collection" -> "1.4.2"
  )
  // This is a temporary fix
  def mapDependencies: Task[coursier.Dependency => coursier.Dependency] = Task.Anon {
    super.mapDependencies().andThen { (d: coursier.Dependency) =>
      // otherwise there are some resolution problems (version conflicts), because Coursier is using pom files only,
      // but Gradle is working with .module files if available
      dependencyPinning.get(d.module.organization.value).map(d.withVersion).getOrElse(d)
    }
  }

  object test extends AndroidAppKotlinTests with TestModule.Junit4 {
    def mvnDeps = super.mvnDeps() ++ Agg(
      mvn"junit:junit:4.13.2"
    )
  }

  object androidTest extends AndroidAppKotlinInstrumentedTests with AndroidTestModule.AndroidJUnit {
    override def instrumentationPackage = "com.example.android"

  }

}

/** Usage

> ./mill app.androidDex

*/

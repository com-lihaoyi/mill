package build

import mill._, kotlinlib._, kotlinlib.js._

object `package` extends RootModule with KotlinModule {

  def kotlinVersion = "1.9.24"
  def ktorVersion = "2.3.12"
  def kotlinHtmlVersion = "0.11.0"

  def mainClass = Some("webapp.WebApp")

  def ivyDeps = Agg(
    ivy"io.ktor:ktor-server-core-jvm:$ktorVersion",
    ivy"io.ktor:ktor-server-netty-jvm:$ktorVersion",
    ivy"io.ktor:ktor-server-html-builder-jvm:$ktorVersion",
  )

  def resources = Task {
    os.makeDir(Task.dest / "webapp")
    val jsPath = client.linkBinary().classes.path
    // Move root.js[.map]into the proper filesystem position
    // in the resource folder for the web server code to pick up
    os.copy(jsPath / "client.js", Task.dest / "webapp/client.js")
    os.copy(jsPath / "client.js.map", Task.dest / "webapp/client.js.map")
    super.resources() ++ Seq(PathRef(Task.dest))
  }

  object test extends KotlinTests with TestModule.Junit5 {
    def ivyDeps = super.ivyDeps() ++ Agg(
      ivy"io.kotest:kotest-runner-junit5-jvm:5.9.1",
      ivy"io.ktor:ktor-server-test-host-jvm:$ktorVersion"
    )
  }

  object client extends KotlinJsModule {
    def kotlinVersion = "1.9.24"

    override def splitPerModule = false

    def ivyDeps = Agg(
      ivy"org.jetbrains.kotlinx:kotlinx-html-js:$kotlinHtmlVersion",
    )
  }
}

// A minimal example of a Kotlin backend server wired up with a Kotlin/JS
// front-end. The backend code is identical to the <<_todomvc_web_app>> example, but
// we replace the `main.js` client side code with the Javascript output of
// `ClientApp.kt`.
//
// Note that the client-side Kotlin code is the simplest 1-to-1 translation of
// the original Javascript, using `kotlinx.browser`, as this example is intended to
// demonstrate the `build.mill` config in Mill. A real codebase is likely to use
// Javascript or Kotlin/JS UI frameworks to manage the UI, but those are beyond the
// scope of this example.

/** Usage

> ./mill test
...webapp.WebAppTestssimpleRequest ...

> ./mill runBackground

> curl http://localhost:8092
...What needs to be done...
...

> curl http://localhost:8092/static/client.js
...bindEvent(this, 'todo-all', '/list/all', 'all')...
...

> ./mill clean runBackground

*/

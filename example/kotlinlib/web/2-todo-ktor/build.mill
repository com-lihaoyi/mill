// This example implementing the well known
// https://todomvc.com/[TodoMVC] example app using Kotlin and Ktor.

package build
import mill._, kotlinlib._

object `package` extends RootModule with KotlinModule {

  def kotlinVersion = "1.9.24"

  def mainClass = Some("com.example.TodoMVCApplicationKt")

  val ktorVersion = "2.3.12"
  val exposedVersion = "0.53.0"

  def jvmDeps = Seq(
    jvm"io.ktor:ktor-server-core-jvm:$ktorVersion",
    jvm"io.ktor:ktor-server-netty-jvm:$ktorVersion",
    jvm"org.jetbrains.exposed:exposed-core:$exposedVersion",
    jvm"org.jetbrains.exposed:exposed-jdbc:$exposedVersion",
    jvm"com.h2database:h2:2.2.224",
    jvm"io.ktor:ktor-server-webjars-jvm:$ktorVersion",
    jvm"org.webjars:jquery:3.2.1",
    jvm"io.ktor:ktor-server-thymeleaf-jvm:$ktorVersion",
    jvm"org.webjars:webjars-locator:0.41",
    jvm"org.webjars.npm:todomvc-common:1.0.5",
    jvm"org.webjars.npm:todomvc-app-css:2.4.1",
    jvm"ch.qos.logback:logback-classic:1.4.14"
  )

  object test extends KotlinTests with TestModule.Junit5 {
    def jvmDeps = super.jvmDeps() ++ Seq(
      jvm"io.kotest:kotest-runner-junit5-jvm:5.9.1",
      jvm"io.ktor:ktor-server-test-host-jvm:2.3.12"
    )
  }
}

// Apart from running a webserver,  this example also demonstrates:

// * Serving HTML templates using Thymeleaf
// * Serving static Javascript and CSS using Webjars
// * Querying a SQL database using Exposed
// * Testing using a H2 in-memory database

/** Usage

> mill test

> mill runBackground

> curl http://localhost:8091
...<h1>todos</h1>...

> mill clean runBackground

*/

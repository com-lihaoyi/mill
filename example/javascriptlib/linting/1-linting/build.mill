package build

import mill._, javascriptlib._

object foo extends TypeScriptModule with TsLintModule

// Mill supports code linting via `eslint` https://eslint.org out of the box.
// You can lint your projects code by providing a configuration for eslint and running `mill _.checkFormatAll`.

// You can define `npmLintDeps` field to add dependencies specific to linting to your module.
// The task `npmLintDeps` works the same way as `npmDeps` or `npmDevDeps`.

/** Usage
> cat foo/src/foo.ts # initial code with lint errors.
export class Foo{
  static main(
    args: string[
]) {
    console.log(`Hello World`);
  }
}

> mill foo.checkFormatAll # run eslint
...
foo/src/foo.ts
  3:5  error  'args' is defined but never used  @typescript-eslint/no-unused-vars
...
...1 problem (1 error, 0 warnings)

> sed -i.bak 's/Hello World/Hello World ${args.join('\'' '\'')}/' foo/src/foo.ts # fix lint error.

> cat foo/src/foo.ts # initial code with lint errors.
export class Foo{
  static main(
    args: string[
]) {
    console.log(`Hello World ${args.join(' ')}`);
  }
}

> mill foo.checkFormatAll # run eslint
All matched files use Eslint code style!
*/

package build

import mill._, javascriptlib._

trait CustomModule extends JestModule {
  def npmDeps: T[Seq[String]] = Task { Seq.empty[String] }

  override def npmInstall: T[PathRef] = Task.Anon {
    os.call((
      "npm",
      "install",
      "esbuild@0.24.0",
      npmDeps()
    ))
    PathRef(Task.dest)
  }

  override def mainFileName = Task { s"index.js" }
  override def mainFilePath =
    Task { compile()._1.path / millSourcePath.last / "src" / mainFileName() }

}

object foo extends CustomModule {
  def npmDeps = Seq(
    "@types/jest@^29.0.0",
    "@types/node@^20.0.0",
    "jest@^29.0.0",
    "ts-jest@^29.0.0",
    "ts-node@^10.9.2",
    "typescript@^5.0.0"
  )

  /** Total number of lines in module source files */
  def lineCount = Task {
    allSources().map(f => os.read.lines(f.path).size).sum
  }

  /** Generate resources using lineCount of sources */
  def resources = Task {
    os.write(Task.dest / "line-count.txt", "" + lineCount())
    PathRef(Task.dest)
  }

  def runArguments: Task[String] = Task { resources().path.toString() }

}

// Documentation for mill.example.javascriptlib

/** Usage

> mill foo.run
[Reading file:] .../out/foo/resources.dest/line-count.txt
Line Count: ...

> mill show foo.bundle
".../out/foo/bundle.dest/bundle.js"

> node out/foo/bundle.dest/bundle.js out/foo/resources.dest/
[Reading file:] .../line-count.txt
Line Count: ...
*/

package build

import mill._, javascriptlib._

object foo extends TypeScriptModule {

  /** Total number of lines in module source files */
  def lineCount = Task {
    allSources().map(f => os.read.lines(f.path).size).sum
  }

  /** Generate resources using lineCount of sources */
  def resources = Task {
    os.write(Task.dest / "line-count.txt", "" + lineCount())
    PathRef(Task.dest)
  }

  // define resource path for the node app
  override def mkENV = Task {
    super.mkENV() ++ Map("RESOURCE_PATH" -> resources().path.toString)
  }

  object test extends TypeScriptTests with TestModule.Jest

}

// Documentation for mill.example.javascriptlib

/** Usage

> mill foo.test
PASS .../foo.test.ts
...
Test Suites:...1 passed, 1 total...
Tests:...2 passed, 2 total...
...

> mill foo.run
[Reading file:] .../out/foo/resources.dest/line-count.txt
Line Count: ...

> mill show foo.bundle
Build succeeded!

> node out/foo/bundle.dest/bundle.js out/foo/resources.dest/
[Reading file:] .../line-count.txt
Line Count: ...
*/

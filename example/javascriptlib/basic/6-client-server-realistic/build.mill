package build
import mill._, javascriptlib._

object server extends JestModule {
  def npmDeps =
    Seq("@types/cors@^2.8.17", "@types/express@^5.0.0", "cors@^2.8.5", "express@^4.21.1")

  def npmDevDeps =
    super.npmDevDeps() ++ Seq("@types/supertest@^6.0.2", "supertest@^7.0.0")

  override def testConfigSource = Task.Source(millSourcePath / "jest.config.ts")

  override def bundleFlags = Map("external" -> Seq("express", "cors"))

  override def mkENV = Task {
    super.mkENV() ++ Map("PORT" -> "3001")
  }

}

object client extends RsWithServeModule {
  override def mkENV = Task {
    super.mkENV() ++ Map("SERVER" -> "3001")
  }
}

// Documentation for mill.example.javascriptlib

/** Usage

> mill server.test
PASS .../server.test.ts
...Server Tests
...should return an empty array of todos...
...should add a new todo...
...should handle errors gracefully...
...should handle invalid todo text gracefully...
...
Test Suites:...
Tests:...
Snapshots:...
Time:...
Ran all test suites matching ...

> mill show server.bundle
Build succeeded!

> mill client.test
PASS src/test/App.test.tsx
...
...renders todos fetched from server...
...adds a new todo item...
...does not add a todo if input is empty...
...
Test Suites:...1 passed, 1 total
Tests:...3 passed, 3 total
Snapshots:...
Time:...
Ran all test suites...
...

> mill client.bundle     # bundle the react app; `client.run` serves static html using server
...
*/

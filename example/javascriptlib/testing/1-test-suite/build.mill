package build

import mill._, javascriptlib._

object bar extends TypeScriptModule {
  object test extends TypeScriptTests with TestModule.Jest
}

object baz extends TypeScriptModule {
  object test extends TypeScriptTests with TestModule.Vitest
}

object foo extends TypeScriptModule {
  object test extends TypeScriptTests with TestModule.Mocha
}

object qux extends TypeScriptModule {
  object test extends TypeScriptTests with TestModule.Jasmine
}

// This build defines 4 modules bar, baz, foo & qux with test suites configured to use
// Jest, Vitest, Mocha & Jasmine respectively.

// Mill will auto-magically generate test configurations for each respective test suite.
// Custom test configurations can be used by simply including a matching test suite config file in your project root,
// same directory as your `build.mill` file.
//
// You can view the generated config file by looking in the `compile` destination for your modules test.
// For example, the module `bar` will have its `jest.config.ts` file live in `out/bar/test/compile.dest/`.
//
// It is important to note, that for most use cases you will never need
// to define a custom test configurtion file.

// For custom configurations:

// Jest suite expects a `jest.config.ts` file.

// Jasmine suite expects a `jasmine.json` file.

// Mocha suite expects a `test-runner.js` file.

// Vitest suite expects a `vitest.config.ts` file.

/** Usage

> mill foo.test
...
...4 passing...
...

> mill bar.test
...Calculator
...
Test Suites:...1 passed, 1 total...
Tests:...4 passed, 4 total...
...

> mill baz.test
.../calculator.test.ts...
...Test Files  1 passed...
...Tests  4 passed...
...

> mill qux.test
...
4 specs, 0 failures
*/

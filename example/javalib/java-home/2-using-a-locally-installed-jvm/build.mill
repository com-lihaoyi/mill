// You can override the `javaHome` method of `ZincWorkerModule` to point to an
// already installed Jvm. This method defaults to `None`, which tells the
// module to use the same Jvm that mill itself is running on.

//// SNIPPET:BUILD

object CustomZincWorkerModule extends ZincWorkerModule {
  override def javaHome: T[Option[PathRef]] = Task {
    Some(PathRef(os.Path("/my/java/home"), quick = true))
  }
}

object foo extends ScalaModule {
  def zincWorker = ModuleRef(CustomZincWorkerModule)

  // ... rest of your build definitions
}

//// SNIPPET:END

// Because this method is a `Task` you can run arbitrary code to compute the
// Java home path. For example, you can read the path from an environment
// variable:

//// SNIPPET:BUILD

object EnvironmentVariableZincWorkerModule extends ZincWorkerModule {
  def javaHomeEnvInput = Task.Input {
    Task.env.get("MY_PROJECT_JAVA_HOME")
  }

  override def javaHome: T[Option[PathRef]] = Task {
    javaHomeEnvInput().map { path =>
      PathRef(os.Path(path), quick = true)
    }
  }
}

//// SNIPPET:END

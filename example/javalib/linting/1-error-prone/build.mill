// https://errorprone.info/index[Error Prone] augments the Java compiler's type
// checker and detect common mistakes at compile time.
// Mill supports ErrorProne via the `ErrorProneModule`.
// Mix the `ErrorProneModule` trait into your `JavaModule` and it will
// automatically run with every compilation.

package build

import mill._, javalib._, errorprone._

object `package` extends RootModule with JavaModule with ErrorProneModule {
  def errorProneOptions = Seq("-XepAllErrorsAsWarnings")
}

/** See Also: src/example/ShortSet.java */

// When adding the `ErrorProneModule` to your `JavaModule`,
// the `error-prone` compiler plugin automatically detects various kind of programming errors.

/** Usage

> ./mill show errorProneOptions
[
  "-XepAllErrorsAsWarnings"
]

> ./mill compile
[warn] .../src/example/ShortSet.java:11:15:  [CollectionIncompatibleType] Argument 'i - 1' should not be passed to this method; its type int is not compatible with its collection's type argument Short
[warn]       s.remove(i - 1);
[warn]               ^    (see https://errorprone.info/bugpattern/CollectionIncompatibleType)
[warn] 1 warning
[warn]               ^
*/

// === Configuration
//
// The following configuration options exist:
//
// `def errorProneVersion: T[String]`::
// The `error-prone` version to use.
// Find the list of versions and changlog at https://github.com/google/error-prone/releases
//
// `def errorProneOptions: T[Seq[String]]`::
//  Options directly given to the `error-prone` processor.
// Those are documented as "flags" at https://errorprone.info/docs/flags
//

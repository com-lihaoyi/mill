// `PmdModule` Performs checks on Java source files using https://pmd.github.io/[PMD] and generates reports from these checks.
//
// PMD is a source code analyzer for Java that finds common programming flaws like unused variables,
// empty catch blocks, unnecessary object creation, and more.
//
// To customize this plugin in a Java module:
//
// 1. Extend JavaModule with PmdModule.
// 2. Define a PMD ruleset file(s) with `pmdRulesets` (default is `pmd-rules.xml` in root).
// 3. Define the PMD version with `pmdVersion`.

package build

import mill._, javalib._
import mill.javalib.pmd.PmdModule

object `package` extends JavaModule, PmdModule {
  def pmdVersion = "7.15.0"
}

// Here's an example of a simple PMD ruleset file and a single Java source file.

/** See Also: pmd-ruleset.xml */
/** See Also: src/foo/EmptyCatchBlock.java */

// CAUTION: Be careful, rule formats can differ between major PMD versions.

// You can either run the `pmd` command on selected modules
// or use the external module `mill.javalib.pmd/`.

/** Usage

> ./mill pmd -s true -v false # <1>
Running PMD ...
Writing PMD output to .../out/pmd.dest/pmd-output.text ...
...src/foo/EmptyCatchBlock.java:7:	EmptyCatchBlock:	Avoid empty catch blocks...
PMD found 1 violation(s)

> ./mill mill.javalib.pmd/ # <2>
error: Running PMD ...
error: Writing PMD output to .../out/mill/javalib/pmd/PmdModule/pmd.dest/pmd-output.text ...
error: 1 tasks failed
error: mill.javalib.pmd.PmdModule.pmd PMD found 1 violation(s)

*/
// <1> `-s` shows the results on the console, `-v` does not fail the build
// <2> Use the external `mill.javalib.pmd` module with default configuration
//
// The `pmd` command accepts several options to customize its behavior. Mill supports:
//
// * `--stdout` / `-s` : Enable output to stdout. False by default. (PMD will write output to a file regardless of this option).
//
// * `--format` / `-f` : Output format of the report (`text`, `xml`, `html`). Defaults to `text`.
//
// * `--fail-on-violation` / `-v` : Fail if violations are found (true by default).
//
// For a full list of PMD options, see the PMD documentation:
// https://pmd.github.io/pmd/pmd_userdocs_cli_reference.html.
//
// Here's an example of producing HTML report:

/** Usage
> ./mill pmd -f "html" -s true -v false
Writing PMD output to .../out/pmd.dest/pmd-output.html ...
...<html><head><title>PMD</title></head><body>...
...<center><h3>PMD report</h3></center><center><h3>Problems found</h3></center><table align="center" cellspacing="0" cellpadding="3"><tr>...
...<th>#</th><th>File</th><th>Line</th><th>Problem</th></tr>...
...<tr bgcolor="lightgrey">...
...<td align="center">1</td>...
...<td width="*%">...src/foo/EmptyCatchBlock.java</td>...
...<td align="center" width="5%">7</td>...
...<td width="*"><a href="https://docs.pmd-code.org/pmd-doc-7.15.0/pmd_rules_java_errorprone.html#emptycatchblock">Avoid empty catch blocks</a></td>...
...</tr>...
...</table></body></html>...
...PMD found 1 violation(s)...
*/

//// SNIPPET:BUILD
package build
import mill.*, javalib.*

object foo extends JavaModule {
  def mvnDeps = Seq(
    mvn"net.sourceforge.argparse4j:argparse4j:0.9.0",
    mvn"org.thymeleaf:thymeleaf:3.1.1.RELEASE"
  )

  object test extends JavaTests, TestModule.Junit4 {
    def mvnDeps = Seq(
      mvn"com.google.guava:guava:33.3.0-jre"
    )
  }
}

// This is a basic Mill build for a single `JavaModule`, with two
// third-party dependencies and a test suite using the JUnit framework.
//
//// SNIPPET:TREE
// ----
// build.mill
// foo/
//     src/
//         foo/Foo.java
//     resources/
//         ...
//     test/
//         src/
//             foo/FooTest.java
// out/foo/
//     compile.json
//     compile.dest/
//     ...
//     test/
//         compile.json
//         compile.dest/
//         ...
// ----
//
// NOTE: The default Mill source folder layout `foo/src/` differs from that of Maven/Gradle's
// `foo/src/main/java/`.
// If you wish to use the Maven source folder layout, e.g. for migrating
// an existing codebase, you should use
// xref:#_maven_compatible_modules[Maven-Compatible Modules]
//
//// SNIPPET:DEPENDENCIES
//
// This example project uses two third-party dependencies - https://argparse4j.github.io/[ArgParse4J] for CLI
// argument parsing, https://www.thymeleaf.org//[Thymeleaf] for HTML rendering - and uses them to wrap a
// given input string in HTML templates with proper escaping.
//
// Typical usage of a `JavaModule` is shown below

/** Usage

> echo $JAVA_HOME
???

*/

// Mill uses OS-Lib for all of its file system and subprocess operations.
//
// === Sandbox Working Directories
//
// One thing to note about Mill's usage of OS-Lib is that Mill sets the `os.pwd`
// and for filesystem operations and subprocesses to each task's `.dest` folder,
// as part of its xref:depth/sandboxing.adoc[] efforts to prevent accidental
// interference between tasks:

import mill._

def task1 = Task {
  os.write(os.pwd / "file.txt", "hello")
  PathRef(os.pwd / "file.txt")
}

def task2 = Task {
  os.call(("bash", "-c", "echo 'world' >> file.txt"))
  PathRef(os.pwd / "file.txt")
}

def command = Task {
  println(task1().path)
  println(os.read(task1().path))
  println(task2().path)
  println(os.read(task2().path))
}

// Thus although both `task1` and `task2` above write to `os.pwd / "file.txt"` -
// one via `os.write` and one via a Bash subprocess - each task gets its own
// working directory that prevents the files from colliding on disk. Thus the final
// `command` can depend on both tasks and read each task's `file.txt` separately
// without conflict

/** Usage

> ./mill command # mac/linux
.../out/task1.dest/file.txt
hello
.../out/task2.dest/file.txt
world

*/
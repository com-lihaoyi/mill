package build
import mill._, pythonlib._

object `package` extends RootModule with PythonModule {
  def mainScript = Task.Source { millSourcePath / "src" / "foo.py" }
  def pythonOptions = Seq("-Wall", "-Xdev")
  def forkEnv = Map("MY_ENV_VAR" -> "HELLO MILL!")
}

// You can pass flags to the Python Interpreter via `pythonOptions`.

/** Usage

> ./mill run
HELLO MILL!

*/

// By default,
// `run` runs the code in a subprocess, and you can pass
// environment-variables via `forkEnv`.
//
// You can also run your code via
//
// [source,bash]
// ----
// mill foo.runLocal
// ----
//
// Which runs it in-process within an isolated classloader. This may be faster
// since you avoid the JVM startup, but does not support `forkEnv`.
//
// If you want to pass main-method arguments to `run` or `runLocal`, simply pass
// them after the `foo.run`/`foo.runLocal`:
//
// [source,bash]
// ----
// mill foo.run arg1 arg2 arg3
// mill foo.runLocal arg1 arg2 arg3
// ----

// As an example of running a task on the meta-build, you can format the `build.mill` with Scalafmt.
// Everything is already provided by Mill.
// You only need a `.scalafmt.conf` config file which at least needs configure the Scalafmt version.

package build
import mill._

object foo extends Module   {def task=Task{"2.13.4"}}

/** See Also: .scalafmt.conf */
/** Usage

> cat build.mill # build.mill is initially poorly formatted
object foo extends Module   {def task=Task{"2.13.4"}}
...

> mill --meta-level 1 mill.scalalib.scalafmt.ScalafmtModule/

> cat build.mill # build.mill is now well formatted
object foo extends Module { def task = Task { "2.13.4" } }
...
*/

//
// * `--meta-level 1` selects the first meta-build. Without any customization, this is
//    the only built-in meta-build.
// * `mill.scalalib.scalafmt.ScalafmtModule/reformatAll` is a generic task to format scala
//    source files with Scalafmt. It requires the tasks that refer to the source files as argument
// * `sources` this selects the `sources` tasks of the meta-build, which at least contains
//    the `build.mill`.


// This section sets up a basic Jetpack Compose project using Mill.
// We utilize `AndroidAppKotlinModule` and `AndroidSdkModule` to streamline the process of
// building an Android application with minimal configuration.
//
// By extending `AndroidAppKotlinModule`, we inherit all Android-related tasks such as
// resource generation, APK building, DEX conversion, and APK signing.
// Additionally, `AndroidSdkModule` is embedded, making SDK management seamless.

//// SNIPPET:BUILD
package build

import mill._
import kotlinlib._
import coursier.core.{MinimizedExclusions, ModuleName, Organization}
import coursier.params.ResolutionParams
import mill.kotlinlib.android.AndroidAppKotlinModule
import mill.javalib.android.AndroidSdkModule

// Create and configure an Android SDK module to manage Android SDK paths and tools.
object androidSdkModule0 extends AndroidSdkModule {
  def buildToolsVersion = "35.0.0"
}

// Actual android application
object app extends AndroidAppKotlinModule {

  def kotlinVersion = "2.0.21"
  def androidSdkModule = mill.define.ModuleRef(androidSdkModule0)
  def androidCompileSdk = 35
  def androidMinSdk = 26
  def androidEnableCompose = true
  def androidIsDebug = true

  def ivyDeps: T[Agg[Dep]] = Agg(
    ivy"androidx.core:core-ktx:1.15.0",
    ivy"androidx.activity:activity-compose:1.9.3",
    ivy"androidx.compose.ui:ui:1.7.5",
    ivy"androidx.compose.material3:material3:1.3.1"
  )

  // This is a temporary fix
  def mapDependencies: Task[coursier.Dependency => coursier.Dependency] = Task.Anon {
    super.mapDependencies().andThen { (d: coursier.Dependency) =>
      // otherwise there are some resolution problems (version conflicts), because Coursier is using pom files only,
      // but Gradle is working with .module files if available
      if (d.module.organization.value == "androidx.collection") {
        d.withVersion("1.4.4")
      } else if (d.module.organization.value == "androidx.lifecycle") {
        d.withVersion("2.8.3")
      } else if (d.module.organization.value == "androidx.compose.runtime") {
        d.withVersion("1.7.5")
      } else {
        d
      }
    }
  }
}

////SNIPPET:END

/** Usage

> ./mill show app.androidApk
".../out/app/androidApk.dest/app.apk"

*/

// This command triggers the build process, which installs the necessary build components, compiles the Kotlin
// code, generates Android resources, converts Kotlin bytecode to DEX format, packages everything
// into an APK, optimizes the APK using `zipalign`, and finally signs it.
//
// This Mill build configuration is designed to build a simple click counter Jetpack Compose application.
// By extending `AndroidAppKotlinModule`, we leverage its predefined Android build tasks, ensuring that
// all necessary steps (resource generation, APK creation, and signing) are executed automatically.
//
// #### Project Structure:
// The project follows the standard Android app layout from Android Studio, you can see the necessary changes in
// the build script to support it.
//
// ----
// .
// ├── app
// │   └── src
// │       └── main
// │           ├── kotlin/com/helloworld/app/MainActivity.kt
// │           ├── res
// │           │   └── [values, drawable, mipmap-<conf>, xml]
// │           └── AndroidManifest.xml
// └── build.mill
// ----
//

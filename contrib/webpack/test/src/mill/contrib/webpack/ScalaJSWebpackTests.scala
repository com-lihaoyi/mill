package mill.contrib.webpack

import ammonite.ops
import mill._
import mill.define.Target
import mill.scalalib._
import mill.util._
import os._
import utest.framework.TestPath
import utest._

object ScalaJSWebpackTests extends TestSuite {

  private val jsPlaceholderFilename =  "placeholder.js"

  trait WebpackTestModule extends TestUtil.BaseModule with ScalaJSWebpackModule {
      def optimizeJs = false

      def fastOpt: T[PathRef] = T { PathRef(millSourcePath / jsPlaceholderFilename) }

      def scalaJSVersion: T[String] = "0.6.33"

      def scalaVersion: T[String] = "2.12.11"
  }

  object WebpackModuleSimple extends WebpackTestModule {
    override def npmDeps = Agg("uuid" -> "8.1.0")
  }

  object WebpackModuleTransitive extends WebpackTestModule {
    override def ivyDeps: Target[Agg[Dep]] = Agg(
      ivy"io.github.outwatch::outwatch::1.0.0-RC2",
    )

  }

  def webpackTest[T](m: TestUtil.BaseModule)(f: TestEvaluator => T)(
      implicit
      tp: TestPath): T = {
    val ev = new TestEvaluator(m)
    ops.rm(ev.outPath)
    f(ev)
  }

  val sProps: String = ops.read(os.resource / "snabbdom-custom-props.js")
  val npmSimpleJson: String = ops.read(os.resource / "package-simple.json")
  val npmTransitiveJson: String = ops.read(os.resource / "package-transitive.json")
  val wpConf: String => String = outputPath =>
    s"""const merge = require('webpack-merge');
       |
       |// Webpack config generated by ScalaJSWebpackModule
       |const generatedWebpackCfg = {
       |  "mode": "development",
       |  "devtool": "source-map",
       |  "entry": "$outputPath/webpackOutputPath/dest/$jsPlaceholderFilename",
       |  "output": {
       |    "path": "$outputPath/webpackOutputPath/dest",
       |    "filename": "out-bundle.js"
       |  },
       |  "module": {
       |    "rules": [
       |       // Scala JS source map support
       |       {
       |           "test": /\\.js$$/,
       |           "use": ["scalajs-friendly-source-map-loader"],
       |           "enforce": "pre"
       |       },
       |    ]
       |  }
       |};
       |
       |module.exports = generatedWebpackCfg;
       |""".stripMargin

  override def tests: Tests = Tests {
    "bundlerDeps" - {
      "extractFromJars" - webpackTest(WebpackModuleTransitive) { ev =>
        val Right((result, _)) = ev(WebpackModuleTransitive.jsDeps)
        assert(
          result.dependencies == Seq("snabbdom" -> "0.7.1"),
          result.devDependencies == Nil,
          result.jsSources get "snabbdom-custom-props.js" contains sProps,
        )
      }
    }

    "webpack" - {
      "writeJsSources" - webpackTest(WebpackModuleTransitive) { ev =>
        val Right((result, _)) = ev(WebpackModuleTransitive.writeWebpackBundleSources)
        val src = ops.read(result.path / "snabbdom-custom-props.js")
        assert(src == sProps)
      }

      "webpackConfig" - webpackTest(WebpackModuleTransitive) { ev =>
        val Right((cfg, _)) = ev(WebpackModuleTransitive.webpackConfig)
        val expected = wpConf(ev.outPath.toString)
        assert(cfg == expected)
      }

      "writePackageJson simple" - webpackTest(WebpackModuleSimple) { ev =>
        val Right((pkgSpec, _)) = ev(WebpackModuleSimple.webpackPackageSpec)
        assert(pkgSpec == npmSimpleJson)
      }

      "writePackageJson transitive" - webpackTest(WebpackModuleTransitive) { ev =>
        val Right((pkgSpec, count)) = ev(WebpackModuleTransitive.webpackPackageSpec)
        assert(pkgSpec == npmTransitiveJson, count > 0)
      }
    }
  }
}

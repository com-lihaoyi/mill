package build.scalalib
import mill._
import mill.contrib.buildinfo.BuildInfo

import scala.util.chaining._
object `package` extends RootModule with build.MillStableScalaModule {
  def moduleDeps = Seq(build.main, build.scalalib.api, build.testrunner)
  def ivyDeps = Agg(
    build.Deps.scalafmtDynamic,
    build.Deps.scalaXml,
    build.Deps.sonatypeCentralClient
  )
  def testIvyDeps = super.testIvyDeps() ++ Agg(build.Deps.TestDeps.scalaCheck)
  def testTransitiveDeps =
    super.testTransitiveDeps() ++ Seq(worker.testDep(), `classgraph-worker`.testDep())

  object backgroundwrapper extends build.MillPublishJavaModule with build.MillJavaModule {
    def ivyDeps = Agg(build.Deps.sbtTestInterface)
  }

  object api extends build.MillStableScalaModule with BuildInfo {
    def moduleDeps = Seq(build.main.api)
    def buildInfoPackageName = "mill.scalalib.api"
    def buildInfoObjectName = "Versions"

    def buildInfoMembers = Seq(
      BuildInfo.Value("ammonite", build.Deps.ammoniteVersion, "Version of Ammonite."),
      BuildInfo.Value("zinc", build.Deps.zinc.dep.version, "Version of Zinc"),
      BuildInfo.Value(
        "scalafmtVersion",
        build.Deps.scalafmtDynamic.dep.version,
        "Version of Scalafmt"
      ),
      BuildInfo.Value(
        "semanticDBVersion",
        build.Deps.semanticDBscala.dep.version,
        "SemanticDB version."
      ),
      BuildInfo.Value(
        "semanticDbJavaVersion",
        build.Deps.semanticDbJava.dep.version,
        "Java SemanticDB plugin version."
      ),
      BuildInfo.Value(
        "millModuledefsVersion",
        build.Deps.millModuledefsVersion,
        "Mill ModuleDefs plugins version."
      ),
      BuildInfo.Value("millCompilerBridgeScalaVersions", build.bridgeScalaVersions.mkString(",")),
      BuildInfo.Value("millCompilerBridgeVersion", build.bridgeVersion),
      BuildInfo.Value("millVersion", build.millVersion(), "Mill version."),
      BuildInfo.Value(
        "sbtTestInterface",
        build.Deps.RuntimeDeps.sbtTestInterface.pipe { d =>
          s"${d.dep.module.organization.value}:${d.dep.module.name.value}:${d.version}"
        },
        "Dependency sbt-test-interface"
      ),
      BuildInfo.Value(
        "jupiterInterface",
        build.Deps.RuntimeDeps.jupiterInterface.pipe { d =>
          s"${d.dep.module.organization.value}:${d.dep.module.name.value}:${d.version}"
        },
        "Dependency to jupiter-interface"
      ),
      BuildInfo.Value("errorProneVersion", build.Deps.RuntimeDeps.errorProneCore.version),
      BuildInfo.Value("coursierJvmIndexVersion", build.Deps.coursierJvmIndexVersion)
    )
  }

  object worker extends build.MillPublishScalaModule with BuildInfo {
    def moduleDeps = Seq(api)
    def ivyDeps = Agg(build.Deps.zinc, build.Deps.log4j2Core)
    def buildInfoPackageName = "mill.scalalib.worker"
    def buildInfoObjectName = "Versions"
    def buildInfoMembers = Seq(
      BuildInfo.Value("zinc", build.Deps.zinc.dep.version, "Version of Zinc.")
    )
  }

  object `classgraph-worker` extends build.MillPublishScalaModule {
    def moduleDeps = Seq(api)
    def ivyDeps = Agg(build.Deps.classgraph)
  }
}

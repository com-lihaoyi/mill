package build.core.api

import mill.contrib.buildinfo.BuildInfo
import mill._
import mill.scalalib._
import millbuild.*

/**
 * This module contains the data types necessary for defining a Mill build:
 * defining Tasks, Modules, helper code, and other related data structures.
 */
object `package` extends MillStableScalaModule with BuildInfo {
  def moduleDeps = Seq(build.core.api.daemon)

  def compileMvnDeps = Task {
    if (scalaVersion().startsWith("3.")) Seq(Deps.scalaCompiler(scalaVersion()))
    else Seq(Deps.scalaReflect(scalaVersion()))
  }

  def mvnDeps = Seq(
    Deps.millModuledefs,
    // TODO: somewhere sourcecode is included transitively,
    // but we need the latest version to bring the macro improvements.
    Deps.sourcecode,
    Deps.osLib,
    Deps.mainargs,
    Deps.upickle,
    Deps.upickleNamedTuples,
    Deps.pprint,
    Deps.fansi,
    Deps.mainargs,
    Deps.fastparse
  )

  def testModuleDeps = super.testModuleDeps ++ Seq(build.testkit)
  def testMvnDeps = Seq(Deps.coursierInterface)

  def buildInfoPackageName = "mill.api"

  def buildInfoMembers = Seq(
    BuildInfo.Value("millVersion", build.millVersion(), "Mill version."),
    BuildInfo.Value("millDocUrl", Settings.docUrl, "Mill documentation url."),
    BuildInfo.Value(
      "millReportNewIssueUrl",
      Settings.newIssueUrl,
      "URL to create a new issue in Mills issue tracker."
    ),
    BuildInfo.Value("coursierJvmIndexVersion", Deps.coursierJvmIndexVersion)
  )

}

package build.core.define

import mill._
import mill.scalalib._
import millbuild._

/**
 * This module contains the data types necessary for defining a Mill build:
 * defining Tasks, Modules, and other related data structures.
 */
object `package` extends RootModule with MillStableScalaModule {
  def moduleDeps = Seq(build.core.api)

  def compileIvyDeps = Task {
    if (scalaVersion().startsWith("3.")) Agg(Deps.scalaCompiler(scalaVersion()))
    else Agg(Deps.scalaReflect(scalaVersion()))
  }

  def ivyDeps = Agg(
    Deps.millModuledefs,
    // TODO: somewhere sourcecode is included transitively,
    // but we need the latest version to bring the macro improvements.
    Deps.sourcecode,
    // Necessary so we can share the JNA classes throughout the build process
    Deps.jna,
    Deps.jnaPlatform,
    Deps.jarjarabrams,
    Deps.mainargs,
    Deps.scalaparse
  )
}
